#pragma checksum "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartHYS\WebAppSmartHYS\Views\Documentation\SiteStructure.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "ea7c4945921021f4f0606e0ee306e57a97654192095f1176d84d64dd5fd433e0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Documentation_SiteStructure), @"mvc.1.0.view", @"/Views/Documentation/SiteStructure.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartHYS\WebAppSmartHYS\Views\_ViewImports.cshtml"
using WebAppSmartHYS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartHYS\WebAppSmartHYS\Views\_ViewImports.cshtml"
using WebAppSmartHYS.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartHYS\WebAppSmartHYS\Views\_ViewImports.cshtml"
using WebAppSmartHYS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"ea7c4945921021f4f0606e0ee306e57a97654192095f1176d84d64dd5fd433e0", @"/Views/Documentation/SiteStructure.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"2680b0911451f119d93d0603efbb5941fab1622fe97ee8167abc3f07489ce785", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Documentation_SiteStructure : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("w-75"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/site-layout.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Site Structure"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartHYS\WebAppSmartHYS\Views\Documentation\SiteStructure.cshtml"
  
    ViewData["Title"] = "Site Structure";
    ViewData["PageName"] = "documentation_site_structure";
    ViewData["Heading"] = "<i class='fal fa-book'></i> Documentation: <span class='fw-300'>Site Structure</span>";
    ViewData["Category1"] = "Documentation";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""row documentation"">
    <div class=""col-xl-12"">
        <div class=""panel"">
            <div class=""panel-hdr"">
                <h2>SmartAdmin for ASP.NET Core 3.1 - Documentation</h2>
            </div>
            <div class=""panel-container show"">
                <div class=""panel-content"">
<h3>Site Structure</h3>
<p>The SmartAdmin Theme at its core is created using Bootstrap 4 components that create several &quot;sections&quot; of content that divide the webpages into logical content partitions. Throughout these <strong>sections</strong> various pieces of content and scripts are loaded to provide a rich, immerse and responsive experience. The focus here lies on presenting readable content using an intuitive structure that caters to the exact need of the SmartAdmin platform as a whole.</p>
<h3>Sections</h3>
<p>To fully illustrate this concept, please take a look at the following image:</p>
<p>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "ea7c4945921021f4f0606e0ee306e57a97654192095f1176d84d64dd5fd433e06064", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</p>
<p>In the above image the following sections are highlighted:</p>
<table class=""table table-bordered"">
<thead>
<tr>
<th style=""text-align:center"">Section</th>
<th>Purpose</th>
<th>Template</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align:center"">1</td>
<td>Logo (Title)</td>
<td><code>_Logo.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">2</td>
<td>Aside (Navigation Card, Menu)</td>
<td><code>_LeftPanel.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">3</td>
<td>Header (Search, Notifications, Login)</td>
<td><code>_PageHeader.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">4</td>
<td>BreadCrumb (Location)</td>
<td><code>_PageBreadcrumb.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">5</td>
<td>Content (Title, Subtitle and Main Content)</td>
<td><code>_PageHeading.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">6</td>
<td>Footer (Version, Copyright)</td>
<td><code>_PageFooter.cshtml</code></td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>");
            WriteLiteral(@"Note:</strong> The main content block is replaced by the actual content of each page that is resolved by the route in either the <strong>Views</strong> or the <strong>Pages</strong> folder.</p>
</blockquote>
<p>The following sections are also part of the layout but are &quot;non-visual&quot;:</p>
<table class=""table table-bordered"">
<thead>
<tr>
<th style=""text-align:center"">Section</th>
<th>Purpose</th>
<th>Template(s)</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align:center"">1</td>
<td>Head (CSS, FavIco, Fonts)</td>
<td><code>_Head.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">2</td>
<td>Scripts (Core, Plugins)</td>
<td><code>_ScriptBasePlugins.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">3</td>
<td>Scripts (Validation)</td>
<td><code>_ValidationScriptsPartial.cshtml</code></td>
</tr>
<tr>
<td style=""text-align:center"">4</td>
<td>Scripts (Analytics)</td>
<td><code>_GoogleAnalytics.cshtml</code></td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>Note:</strong> For more inf");
            WriteLiteral(@"ormation about possible layouts and settings available to the <strong>SmartAdmin Theme</strong> please visit the <a href=""https://www.gotbootstrap.com/themes/smartadmin/4.4.5/settings_how_it_works.html"">Layout</a> and <a href=""https://www.gotbootstrap.com/themes/smartadmin/4.4.5/settings_layout_options.html"">Settings</a> pages on the HTML Preview site.</p>
</blockquote>
</div></div></div><div class=""panel""><div class=""panel-hdr""><h2 id=""ProjectStructure"">Project Structure</h2></div><div class=""panel-container show""><div class=""panel-content"">
<p>The SmartAdmin solution is divided into several projects and solution folders. Each project has its own set of responsibilities and determines its tie-in with other projects. The structure as a whole delivers a smooth coding experience whether you have been coding in Visual Studio for a long time, or when you are in the processing of mastering it.</p>
<p>The code, and certainly that which is part of the public API, have been provided with well written comments explain");
            WriteLiteral(@"ing why the code exists, what its goal is, and how it should be used and which conditions could cause it to fail. This principle and approach is also reflected in the naming of classes, methods and their properties to be as descriptive as possible to help deliver an intuitive coding experience and hopefully to invite <strong>you</strong> to start writing your own!</p>
<h3>Folders</h3>
<table class=""table table-bordered"">
<thead>
<tr>
<th>Folder</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>build</code></td>
<td>Typically contains artifacts that might be required to (fully) build your project</td>
</tr>
<tr>
<td><code>docs</code></td>
<td>Contains the documentation you are currently reading and is a recommended place to store your own project documentation</td>
</tr>
<tr>
<td><code>samples</code></td>
<td>Typically contains sample projects that demonstrate certain key features or concepts of your application and/or libraries</td>
</tr>
<tr>
<td><code>src</code></td>
<td>Contains the main applicat");
            WriteLiteral(@"ion and class libraries that make up your project</td>
</tr>
<tr>
<td><code>tests</code></td>
<td>Typically contains the companion test projects for each project in your solution</td>
</tr>
</tbody>
</table>
<h3>Solution Files</h3>
<table class=""table table-bordered"">
<thead>
<tr>
<th>File</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.editorconfig</code></td>
<td>Contains coding style and formatting configuration that Visual Studio can use</td>
</tr>
<tr>
<td><code>.git*</code></td>
<td>Files required for Git source control</td>
</tr>
<tr>
<td><code>*.md</code></td>
<td>Additional information about the Theme and Project</td>
</tr>
<tr>
<td><code>SmartAdminCore.sln</code></td>
<td>Solution file that should be opened with Visual Studio</td>
</tr>
<tr>
<td><code>NuGet.config</code></td>
<td>Contains the feed sources that your projects can consume for NuGet packages</td>
</tr>
</tbody>
</table>
<h3>Application</h3>
<p>There are a couple of main locations within the <strong>WebAppSmartHYS</strong> p");
            WriteLiteral(@"roject that contain content files:</p>
<table class=""table table-bordered"">
<thead>
<tr>
<th>Location</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>/Areas/Identity/**</code></td>
<td>Contains views used for the Authentication part of the application</td>
</tr>
<tr>
<td><code>/Pages/**</code></td>
<td>Contains pages that are required for the <strong>Razor Pages</strong> based content of the application</td>
</tr>
<tr>
<td><code>/Views/Shared/**</code></td>
<td>Contains views that are required for the layout of the application</td>
</tr>
<tr>
<td><code>/Views/Shared/Components/**</code></td>
<td>Contains views that are required for the <strong>ViewComponents</strong> of the application</td>
</tr>
<tr>
<td><code>/ViewComponents/**</code></td>
<td>Contains view components that are used by the application, such as Navigation (Aside)</td>
</tr>
<tr>
<td><code>/Views/**</code></td>
<td>Contains views that are required for the <strong>MVC</strong> based content of the application</td>
</tr>
<tr>
<td><co");
            WriteLiteral(@"de>/wwwroot/**</code></td>
<td>Contains static assets of the application, such as CSS, JS and Fonts</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>Note:</strong> The above listing is based on the <strong>Full</strong> flavor of the Theme, some flavors may not include all listed folders in your solution.</p>
</blockquote>
</div></div></div><div class=""panel""><div class=""panel-hdr""><h2 id=""Navigation"">Navigation</h2></div><div class=""panel-container show""><div class=""panel-content"">
<p>The menu in rendered using the <code>nav.json</code> file from the root of the <strong>WebAppSmartHYS</strong> project. Although this could be replaced by using a different data source, we have chosen to use the file provided by the HTML Flavor of SmartAdmin. This ensures that with every update of the Theme the Menu changes accordingly.</p>
<p>The classes that are used by SmartAdmin and the model that is consumed by the ViewComponent have been constructed as such that it should be relatively easy to replace it with a databa");
            WriteLiteral(@"se generated collection of menu items instead.</p>
<h3>ViewComponent</h3>
<p>The contents of the Menu is rendered using a <a href=""https://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-components"">ViewComponent</a>. This ensures us that we can use a stand-alone data source that does not have to be fed through Controllers or other means.</p>
<pre class=""prettyprint lang-csharp mb-2 mt-0"">public class NavigationViewComponent : ViewComponent
{
    public IViewComponentResult Invoke()
    {
        var items = NavigationModel.Full;

        return View(items);
    }
}
</pre>
<blockquote>
<p><strong>Note:</strong> <code>NavigationModel.Full</code> can be replaced with <code>NavigationModel.Seed</code> to generate the <strong>Seed</strong> flavor menu.</p>
</blockquote>
<p>The markup for the ViewComponent is located in: <code>/Views/Shared/Components/Navigation/Default.cshtml</code>.</p>
<h4>Authorization</h4>
<p>The <code>nav.json</code> file supports Authorization by specifying a <code>roles</code> array in");
            WriteLiteral(@"side the structure. By default the MVC Flavor has been prepared to assign the <strong>Administrator</strong> role to the default user, as such that when Authorization is enabled on rendering the Navigation, certain elements from <code>nav.json</code> will not be rendered unless the same role is specified.</p>
<p>You can enable Authorization inside the ViewComponent <code>Default.cshtml</code> content by looking for this line:</p>
<pre class=""prettyprint lang-csharp mb-2 mt-0"">");
            WriteLiteral("@foreach (var group in Model.Lists)\n</pre>\n<p>And replacing it by the following line:</p>\n<pre class=\"prettyprint lang-csharp mb-2 mt-0\">");
            WriteLiteral(@"@foreach (var group in Model.Lists.AuthorizeFor(User))
</pre>
<blockquote>
<p><strong>Note:</strong> We also have an <strong>interactive</strong> instruction on enabling Authorization for the menu. Please open the <strong>Solution Overview</strong> element of the Menu and click on <strong>Interactive</strong> to find it.</p>
</blockquote>
<hr>
<p>Copyright © 2020 by Walapa. All rights reserved. This documentation or any portion thereof
may not be reproduced or used in any manner whatsoever without the express written permission of the publisher except for the use of brief quotations in a review.</p>

                </div>
            </div>
        </div>
    </div>
</div>
");
            DefineSection("ScriptsBlock", async() => {
                WriteLiteral("\r\n    <script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\"></script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SmartSettings Settings { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
