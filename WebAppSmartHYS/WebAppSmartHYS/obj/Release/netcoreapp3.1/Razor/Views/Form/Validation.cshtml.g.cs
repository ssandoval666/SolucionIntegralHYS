#pragma checksum "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\Validation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Form_Validation), @"mvc.1.0.view", @"/Views/Form/Validation.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ed0fa6cf07840fecc32ab9c94c706c07099f5a2a", @"/Views/Form/Validation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"25233f6d650b7b891024792ce25bb18ffa0a7387", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Form_Validation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("was-validated"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("needs-validation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("selected", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\Validation.cshtml"
   
	ViewData["Title"] = "Validation";
	ViewData["PageName"] = "form_validation";
	ViewData["Heading"] = "<i class='subheader-icon fal fa-edit'></i> Validation";
	ViewData["Category1"] = "Form Stuff";
	ViewData["PageDescription"] = "Provide valuable, actionable feedback to your users with HTML5 form validation. Choose from the browser default validation feedback, or implement custom messages with our built-in classes and starter JavaScript.";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"alert alert-primary alert-dismissible\">\n\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n\t\t<span aria-hidden=\"true\">\n\t\t\t<i");
            BeginWriteAttribute("class", " class=\"", 612, "\"", 657, 2);
#nullable restore
#line 11 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\Validation.cshtml"
WriteAttributeValue("", 620, Settings.Theme.IconPrefix, 620, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 648, "fa-times", 649, 9, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
		</span>
	</button>
	<div class=""d-flex flex-start w-100"">
		<div class=""mr-2 hidden-md-down"">
			<span class=""icon-stack icon-stack-lg"">
				<i class=""base base-6 icon-stack-3x opacity-100 color-primary-500""></i>
				<i class=""base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical""></i>
				<i");
            BeginWriteAttribute("class", " class=\"", 979, "\"", 1061, 5);
#nullable restore
#line 19 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\Validation.cshtml"
WriteAttributeValue("", 987, Settings.Theme.IconPrefix, 987, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 1015, "fa-info", 1016, 8, true);
            WriteAttributeValue(" ", 1023, "icon-stack-1x", 1024, 14, true);
            WriteAttributeValue(" ", 1037, "opacity-100", 1038, 12, true);
            WriteAttributeValue(" ", 1049, "color-white", 1050, 12, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
			</span>
		</div>
		<div class=""d-flex flex-fill"">
			<div class=""flex-fill"">
				<p class=""h6"">How it works</p>
				<p>Validation styles are available for the following form controls and components: <code>&lt;input&gt;</code> and <code>&lt;textarea&gt;</code> with <code>.form-control</code> (including up to one <code>.form-control</code> in input groups), <code>&lt;select&gt;</code> with <code>.form-select</code> or <code>.custom-select</code>, <code>.form-check</code>, <code>.custom-checkbox</code> and <code>.custom-radio</code>, <code>.custom-file</code></p>
				Learn more about forms on bootstrap's <a");
            BeginWriteAttribute("href", " href=\"", 1682, "\"", 1763, 3);
            WriteAttributeValue("", 1689, "https://getbootstrap.com/docs/", 1689, 30, true);
#nullable restore
#line 26 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\Validation.cshtml"
WriteAttributeValue("", 1719, ViewBag.Bs4v, 1719, 13, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 1732, "/components/forms/#how-it-works", 1732, 31, true);
            EndWriteAttribute();
            WriteLiteral(@" target=""_blank"">official documentation</a>
			</div>
		</div>
	</div>
</div>
<div class=""row"">
	<div class=""col-xl-6"">
		<div id=""panel-1"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Invalid  <span class=""fw-300""><i>form styles</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a10229", async() => {
                WriteLiteral(@"
						<div class=""form-group"">
							<label class=""form-label"" for=""simpleinputInvalid"">Text input</label>
							<input type=""text""  class=""form-control is-invalid"" id=""simpleinputInvalid"" required>
							<div class=""invalid-feedback"">
								Please enter a message in the textarea.
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"" for=""validationTextarea3"">Textarea</label>
							<textarea class=""form-control is-invalid"" id=""validationTextarea3"" placeholder=""Required example textarea"" required rows=""4""></textarea>
							<div class=""invalid-feedback"">
								Please enter a message in the textarea.
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"">Checkbox & Radio</label>
							<div class=""custom-control custom-checkbox mb-3"">
								<input type=""checkbox"" class=""custom-control-input"" id=""customControlValidation1"" required>
								<label class=""custom-control-label"" for=""customControlValidation1"">Check this custom checkb");
                WriteLiteral(@"ox</label>
								<div class=""invalid-feedback"">Example invalid feedback text</div>
							</div>
							<div class=""custom-control custom-radio mb-2"">
								<input type=""radio"" class=""custom-control-input"" id=""customControlValidation2"" name=""radio-stacked"" required>
								<label class=""custom-control-label"" for=""customControlValidation2"">Toggle this custom radio</label>
							</div>
							<div class=""custom-control custom-radio"">
								<input type=""radio"" class=""custom-control-input"" id=""customControlValidation3"" name=""radio-stacked"" required>
								<label class=""custom-control-label"" for=""customControlValidation3"">Or toggle this other custom radio</label>
								<div class=""invalid-feedback"">More example invalid feedback text</div>
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"">Switch elements</label>
							<div class=""custom-control custom-switch"">
								<input type=""checkbox"" class=""custom-control-input is-invalid"" id=""customControlValidation4"" re");
                WriteLiteral(@"quired>
								<label class=""custom-control-label"" for=""customControlValidation4"">Toggle this switch element </label>
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"" for=""customControlValidation5"">Custom select</label>
							<select class=""custom-select"" required id=""customControlValidation5"">
								");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a13057", async() => {
                    WriteLiteral("Open this select menu");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a14310", async() => {
                    WriteLiteral("One");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a15545", async() => {
                    WriteLiteral("Two");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a16780", async() => {
                    WriteLiteral("Three");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
							</select>
							<div class=""invalid-feedback"">Example invalid custom select feedback</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label is-invalid"" for=""customControlValidation6"">Multiple Select</label>
							<select id=""customControlValidation6""");
                BeginWriteAttribute("multiple", " multiple=\"", 5478, "\"", 5489, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"form-control\" required>\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a18508", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a19532", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a20556", async() => {
                    WriteLiteral("3");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a21580", async() => {
                    WriteLiteral("4");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a22604", async() => {
                    WriteLiteral("5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
							</select>
						</div>
						<div class=""form-group"">
							<label class=""form-label"">Custom file input</label>
							<div class=""custom-file"">
								<input type=""file"" class=""custom-file-input"" id=""customControlValidation7"" required>
								<label class=""custom-file-label"" for=""customControlValidation7"">Choose file...</label>
								<div class=""invalid-feedback"">Example invalid custom file feedback</div>
							</div>
						</div>
					");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
				</div>
			</div>
		</div>	
		<div id=""panel-2"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Custom  <span class=""fw-300""><i>Styles</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						<p>For custom Bootstrap form validation messages, you’ll need to add the <code>novalidate</code> boolean attribute to your <code>&lt;form&gt;</code>. This disables the browser default feedback tooltips, but still provides access to the form validation");
            WriteLiteral(@" APIs in JavaScript. Try to submit the form below; our JavaScript will intercept the submit button and relay feedback to you. When attempting to submit, you’ll see the <code>:invalid</code> and <code>:valid</code> styles applied to your form controls.</p>
						<p>Custom feedback styles apply custom colors, borders, focus styles, and background icons to better communicate feedback. Background icons for <code>&lt;select&gt;</code>s are only available with <code>.custom-select</code>, and not <code>.form-control</code>.</p>
					</div>
				</div>
				<div class=""panel-content p-0"">	
					");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a26834", async() => {
                WriteLiteral(@"
						<div class=""panel-content"">
							<div class=""form-row"">
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationCustom01"">First name <span class=""text-danger"">*</span> </label>
									<input type=""text"" class=""form-control"" id=""validationCustom01"" placeholder=""First name"" value=""Codex"" required>
									<div class=""valid-feedback"">
										Looks good!
									</div>
								</div>
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationCustom02"">Last name <span class=""text-danger"">*</span></label>
									<input type=""text"" class=""form-control"" id=""validationCustom02"" placeholder=""Last name"" value=""Lantern"" required>
									<div class=""valid-feedback"">
										Looks good!
									</div>
								</div>
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationCustomUsername"">Username <span class=""text-danger"">*</span></label>
									<div class=""input-group"">
										<div class=""input-group-prepend"">");
                WriteLiteral("\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"inputGroupPrepend\">");
                WriteLiteral(@"@</span>
										</div>
										<input type=""text"" class=""form-control"" id=""validationCustomUsername"" placeholder=""Username"" aria-describedby=""inputGroupPrepend"" required>
										<div class=""invalid-feedback"">
											Please choose a username.
										</div>
									</div>
								</div>
							</div>		
							<div class=""form-row form-group"">
								<div class=""col-md-6 mb-3"">
									<label class=""form-label"" for=""validationCustom03"">City <span class=""text-danger"">*</span></label>
									<input type=""text"" class=""form-control"" id=""validationCustom03"" placeholder=""City"" required>
									<div class=""invalid-feedback"">
										Please provide a valid city.
									</div>
								</div>
								<div class=""col-md-3 mb-3"">
									<label class=""form-label"" for=""validationCustom03"">State <span class=""text-danger"">*</span></label>
									<select class=""custom-select""");
                BeginWriteAttribute("required", " required=\"", 9766, "\"", 9777, 0);
                EndWriteAttribute();
                WriteLiteral(">\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a29446", async() => {
                    WriteLiteral("State");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a30687", async() => {
                    WriteLiteral("Michigan");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a31931", async() => {
                    WriteLiteral("New York");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a33175", async() => {
                    WriteLiteral("Oklahoma");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
									</select>
									<div class=""invalid-feedback"">
										Please provide a valid state.
									</div>
								</div>
								<div class=""col-md-3 mb-3"">
									<label class=""form-label"" for=""validationCustom05"">Zip <span class=""text-danger"">*</span></label>
									<input type=""text"" class=""form-control"" id=""validationCustom05"" placeholder=""Zip"" required>
									<div class=""invalid-feedback"">
										Please provide a valid zip.
									</div>
								</div>
								<div class=""col-12 mb-3"">
									<label class=""form-label"" for=""validationTextarea2"">Comment <span class=""text-danger"">*</span></label>
									<textarea class=""form-control"" id=""validationTextarea2"" placeholder=""Required example textarea""");
                BeginWriteAttribute("required", " required=\"", 10693, "\"", 10704, 0);
                EndWriteAttribute();
                WriteLiteral(@"></textarea>
									<div class=""invalid-feedback"">
										Please enter a message in the textarea.
									</div>									
								</div>
								<div class=""col-12"">
									<label class=""form-label mb-2"">Please disclose your gender profile <span class=""text-danger"">*</span></label>
									<div class=""custom-control custom-radio mb-2"">
										<input type=""radio"" class=""custom-control-input"" id=""GenderMale"" name=""radio-stacked""");
                BeginWriteAttribute("required", " required=\"", 11147, "\"", 11158, 0);
                EndWriteAttribute();
                WriteLiteral(">\n\t\t\t\t\t\t\t\t\t\t<label class=\"custom-control-label\" for=\"GenderMale\">Male</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"custom-control custom-radio mb-2\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"radio\" class=\"custom-control-input\" id=\"GenderFemale\" name=\"radio-stacked\"");
                BeginWriteAttribute("required", " required=\"", 11406, "\"", 11417, 0);
                EndWriteAttribute();
                WriteLiteral(">\n\t\t\t\t\t\t\t\t\t\t<label class=\"custom-control-label\" for=\"GenderFemale\">Female</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"custom-control custom-radio\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"radio\" class=\"custom-control-input\" id=\"genderPrivate\" name=\"radio-stacked\"");
                BeginWriteAttribute("required", " required=\"", 11665, "\"", 11676, 0);
                EndWriteAttribute();
                WriteLiteral(@">
										<label class=""custom-control-label"" for=""genderPrivate"">Prefer not to say</label>
										<div class=""invalid-feedback"">Please select at least one</div>
									</div>
								</div>
							</div>
						</div>
						<div class=""panel-content border-faded border-left-0 border-right-0 border-bottom-0 d-flex flex-row align-items-center"">
							<div class=""custom-control custom-checkbox"">
								<input type=""checkbox"" class=""custom-control-input"" id=""invalidCheck"" required>
								<label class=""custom-control-label"" for=""invalidCheck"">Agree to terms and conditions <span class=""text-danger"">*</span></label>
								<div class=""invalid-feedback"">
									You must agree before submitting.
								</div>
							</div>
							<button class=""btn btn-primary ml-auto"" type=""submit"">Submit form</button>
						</div>
					");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
					<script>
					// Example starter JavaScript for disabling form submissions if there are invalid fields
					(function() {
					  'use strict';
					  window.addEventListener('load', function() {
						// Fetch all the forms we want to apply custom Bootstrap validation styles to
						var forms = document.getElementsByClassName('needs-validation');
						// Loop over them and prevent submission
						var validation = Array.prototype.filter.call(forms, function(form) {
						  form.addEventListener('submit', function(event) {
							if (form.checkValidity() === false) {
							  event.preventDefault();
							  event.stopPropagation();
							}
							form.classList.add('was-validated');
						  }, false);
						});
					  }, false);
					})();
					</script>
				</div>
			</div>
		</div>	
		<div id=""panel-3"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Server  <span class=""fw-300""><i>side</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""pan");
            WriteLiteral(@"el-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						We recommend using client-side validation, but in case you require server-side validation, you can indicate invalid and valid form fields with <code>.is-invalid</code> and <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these classes
					</div>
					");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a41028", async() => {
                WriteLiteral(@"
						<div class=""form-row"">
							<div class=""col-md-4 mb-3"">
								<label class=""form-label"" for=""validationServer01"">First name</label>
								<input type=""text"" class=""form-control is-valid"" id=""validationServer01"" placeholder=""First name"" value=""Mark"" required>
								<div class=""valid-feedback"">
									Looks good!
								</div>
							</div>
							<div class=""col-md-4 mb-3"">
								<label class=""form-label"" for=""validationServer02"">Last name</label>
								<input type=""text"" class=""form-control is-valid"" id=""validationServer02"" placeholder=""Last name"" value=""Otto"" required>
								<div class=""valid-feedback"">
									Looks good!
								</div>
							</div>
							<div class=""col-md-4 mb-3"">
								<label class=""form-label"" for=""validationServerUsername"">Username</label>
								<div class=""input-group"">
									<div class=""input-group-prepend"">
										<span class=""input-group-text"" id=""inputGroupPrepend3"">");
                WriteLiteral(@"@</span>
									</div>
									<input type=""text"" class=""form-control is-invalid"" id=""validationServerUsername"" placeholder=""Username"" aria-describedby=""inputGroupPrepend3"" required>
									<div class=""invalid-feedback"">
										Please choose a username.
									</div>
								</div>
							</div>
						</div>
						<div class=""form-row"">
							<div class=""col-md-6 mb-3"">
								<label class=""form-label"" for=""validationServer03"">City</label>
								<input type=""text"" class=""form-control is-invalid"" id=""validationServer03"" placeholder=""City"" required>
								<div class=""invalid-feedback"">
									Please provide a valid city.
								</div>
							</div>
							<div class=""col-md-3 mb-3"">
								<label class=""form-label"" for=""validationServer04"">State</label>
								<input type=""text"" class=""form-control is-invalid"" id=""validationServer04"" placeholder=""State"" required>
								<div class=""invalid-feedback"">
									Please provide a valid state.
								</div>
							</div>
							<div class=""col");
                WriteLiteral(@"-md-3 mb-3"">
								<label class=""form-label"" for=""validationServer05"">Zip</label>
								<input type=""text"" class=""form-control is-invalid"" id=""validationServer05"" placeholder=""Zip"" required>
								<div class=""invalid-feedback"">
									Please provide a valid zip.
								</div>
							</div>
						</div>
						<div class=""form-group"">
							<div class=""form-check"">
								<input class=""form-check-input is-invalid"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 16776, "\"", 16784, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""invalidCheck3"" required>
								<label class=""form-check-label"" for=""invalidCheck3"">
								Agree to terms and conditions
								</label>
								<div class=""invalid-feedback"">
									You must agree before submitting.
								</div>
							</div>
						</div>
						<button class=""btn btn-primary"" type=""submit"">Submit form</button>
					");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
				</div>
			</div>
		</div>	
	</div>
	<div class=""col-xl-6"">
		<div id=""panel-4"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Valid  <span class=""fw-300""><i>form styles</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a46201", async() => {
                WriteLiteral(@"
						<div class=""form-group"">
							<label class=""form-label"" for=""simpleinputInvalid2"">Text input</label>
							<input type=""text""  class=""form-control is-valid"" id=""simpleinputInvalid2"" required value=""test"">
							<div class=""valid-feedback"">
								Please enter a message in the textarea.
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"" for=""validationTextarea"">Textarea</label>
							<textarea class=""form-control is-valid"" id=""validationTextarea"" placeholder=""Required example textarea"" required rows=""4"">test</textarea>
							<div class=""valid-feedback"">
								Please enter a message in the textarea.
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"">Checkbox & Radio</label>
							<div class=""custom-control custom-checkbox mb-3"">
								<input type=""checkbox"" class=""custom-control-input"" id=""customControlValidationSuccess1"" required");
                BeginWriteAttribute("checked", " checked=\"", 18886, "\"", 18896, 0);
                EndWriteAttribute();
                WriteLiteral(@">
								<label class=""custom-control-label"" for=""customControlValidationSuccess1"">Check this custom checkbox</label>
								<div class=""valid-feedback"">Example valid feedback text</div>
							</div>
							<div class=""custom-control custom-radio mb-2"">
								<input type=""radio"" class=""custom-control-input"" id=""customControlValidationSuccess2"" name=""radio-stacked"" required");
                BeginWriteAttribute("checked", " checked=\"", 19277, "\"", 19287, 0);
                EndWriteAttribute();
                WriteLiteral(@">
								<label class=""custom-control-label"" for=""customControlValidationSuccess2"">Toggle this custom radio</label>
							</div>
							<div class=""custom-control custom-radio"">
								<input type=""radio"" class=""custom-control-input"" id=""customControlValidationSuccess3"" name=""radio-stacked"" required>
								<label class=""custom-control-label"" for=""customControlValidationSuccess3"">Or toggle this other custom radio</label>
								<div class=""valid-feedback"">More example valid feedback text</div>
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"">Switch elements</label>
							<div class=""custom-control custom-switch"">
								<input type=""checkbox"" class=""custom-control-input is-valid"" id=""customControlValidationSuccess4"" required");
                BeginWriteAttribute("checked", " checked=\"", 20071, "\"", 20081, 0);
                EndWriteAttribute();
                WriteLiteral(@">
								<label class=""custom-control-label"" for=""customControlValidationSuccess4"">Toggle this switch element </label>
							</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"" for=""customControlValidationSuccess5"">Custom select</label>
							<select class=""custom-select"" required id=""customControlValidationSuccess5"">
								");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a49511", async() => {
                    WriteLiteral("Open this select menu");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a50764", async() => {
                    WriteLiteral("One");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a52086", async() => {
                    WriteLiteral("Two");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a53321", async() => {
                    WriteLiteral("Three");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
							</select>
							<div class=""valid-feedback"">Example valid custom select feedback</div>
						</div>
						<div class=""form-group"">
							<label class=""form-label"" for=""customControlValidationSuccess6"">Multiple Select</label>
							<select id=""customControlValidationSuccess6""");
                BeginWriteAttribute("multiple", " multiple=\"", 20909, "\"", 20920, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"form-control is-valid\" required>\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a55059", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a56170", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a57281", async() => {
                    WriteLiteral("3");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a58305", async() => {
                    WriteLiteral("4");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a59329", async() => {
                    WriteLiteral("5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
							</select>
						</div>
						<div class=""form-group"">
							<label class=""form-label"">Custom file input</label>
							<div class=""custom-file"">
								<input type=""file"" class=""custom-file-input is-valid"" id=""customControlValidationSuccess7"">
								<label class=""custom-file-label"" for=""customControlValidationSuccess7"">Choose file...</label>
								<div class=""valid-feedback"">Example valid custom file feedback</div>
							</div>
						</div>
					");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"	
				</div>
			</div>
		</div>	
		<div id=""panel-5"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Tooltip  <span class=""fw-300""><i>Styles</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						<p>If your form layout allows it, you can swap the <code>.{valid|invalid}-feedback</code> classes for <code>.{valid|invalid}-tooltip</code> classes to display validation feedback in a styled tooltip. Be sure to have a parent with <code>position: rel");
            WriteLiteral("ative</code> on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"panel-content p-0\">\t\n\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a63222", async() => {
                WriteLiteral(@"
						<div class=""panel-content"">
							<div class=""form-row"">
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationTooltip01"">First name <span class=""text-danger"">*</span> </label>
									<input type=""text"" class=""form-control"" id=""validationTooltip01"" placeholder=""First name"" value=""Codex"" required>
									<div class=""valid-tooltip"">
										Looks good!
									</div>
								</div>
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationTooltip02"">Last name <span class=""text-danger"">*</span></label>
									<input type=""text"" class=""form-control"" id=""validationTooltip02"" placeholder=""Last name"" value=""Lantern"" required>
									<div class=""valid-tooltip"">
										Looks good!
									</div>
								</div>
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationTooltip03"">Username <span class=""text-danger"">*</span></label>
									<div class=""input-group"">
										<div class=""input-group-prepend"">
		");
                WriteLiteral("\t\t\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"inputGroupPrepend2\">");
                WriteLiteral(@"@</span>
										</div>
										<input type=""text"" class=""form-control"" id=""validationTooltip03"" placeholder=""Username"" aria-describedby=""inputGroupPrepend2"" required>
										<div class=""invalid-tooltip"">
											Please choose a username.
										</div>
									</div>
								</div>
							</div>		
							<div class=""form-row form-group"">
								<div class=""col-md-6 mb-3"">
									<label class=""form-label"" for=""validationTooltip04"">City <span class=""text-danger"">*</span></label>
									<input type=""text"" class=""form-control"" id=""validationTooltip04"" placeholder=""City"" required>
									<div class=""invalid-tooltip"">
										Please provide a valid city.
									</div>
								</div>
								<div class=""col-md-3 mb-3"">
									<label class=""form-label"" for=""validationTooltip05"">State <span class=""text-danger"">*</span></label>
									<select class=""custom-select""");
                BeginWriteAttribute("required", " required=\"", 24866, "\"", 24877, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"validationTooltip05\">\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a65855", async() => {
                    WriteLiteral("State");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a67096", async() => {
                    WriteLiteral("Michigan");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a68340", async() => {
                    WriteLiteral("New York");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\t\t\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a69584", async() => {
                    WriteLiteral("Oklahoma");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
									</select>
									<div class=""invalid-tooltip"">
										Please provide a valid state.
									</div>
								</div>
								<div class=""col-md-3 mb-3"">
									<label class=""form-label"" for=""validationTooltip06"">Zip <span class=""text-danger"">*</span></label>
									<input type=""text"" class=""form-control"" id=""validationTooltip06"" placeholder=""Zip"" required>
									<div class=""invalid-tooltip"">
										Please provide a valid zip.
									</div>
								</div>
								<div class=""col-12 mb-3"">
									<label class=""form-label"" for=""validationTooltip07"">Comment <span class=""text-danger"">*</span></label>
									<textarea class=""form-control"" id=""validationTooltip07"" placeholder=""Required example textarea""");
                BeginWriteAttribute("required", " required=\"", 25818, "\"", 25829, 0);
                EndWriteAttribute();
                WriteLiteral(@"></textarea>
									<div class=""invalid-tooltip"">
										Please enter a message in the textarea.
									</div>									
								</div>
								<div class=""col-12"">
									<label class=""form-label mb-2"">Please disclose your gender profile <span class=""text-danger"">*</span></label>
									<div class=""custom-control custom-radio mb-2"">
										<input type=""radio"" class=""custom-control-input"" id=""validationTooltipGenderMale"" name=""radio-stacked""");
                BeginWriteAttribute("required", " required=\"", 26288, "\"", 26299, 0);
                EndWriteAttribute();
                WriteLiteral(@">
										<label class=""custom-control-label"" for=""validationTooltipGenderMale"">Male</label>
									</div>
									<div class=""custom-control custom-radio mb-2"">
										<input type=""radio"" class=""custom-control-input"" id=""validationTooltipGenderFemale"" name=""radio-stacked""");
                BeginWriteAttribute("required", " required=\"", 26581, "\"", 26592, 0);
                EndWriteAttribute();
                WriteLiteral(@">
										<label class=""custom-control-label"" for=""validationTooltipGenderFemale"">Female</label>
									</div>
									<div class=""custom-control custom-radio"">
										<input type=""radio"" class=""custom-control-input"" id=""validationTooltipgenderPrivate"" name=""radio-stacked""");
                BeginWriteAttribute("required", " required=\"", 26874, "\"", 26885, 0);
                EndWriteAttribute();
                WriteLiteral(@">
										<label class=""custom-control-label"" for=""validationTooltipgenderPrivate"">Prefer not to say</label>
										<div class=""invalid-tooltip"">Please select at least one</div>
									</div>
								</div>
							</div>
						</div>
						<div class=""panel-content border-faded border-left-0 border-right-0 border-bottom-0 d-flex flex-row align-items-center"">
							<div class=""custom-control custom-checkbox"">
								<input type=""checkbox"" class=""custom-control-input"" id=""validationTooltipAgreement"" required>
								<label class=""custom-control-label"" for=""validationTooltipAgreement"">Agree to terms and conditions <span class=""text-danger"">*</span></label>
								<div class=""invalid-tooltip"">
									You must agree before submitting.
								</div>
							</div>
							<button class=""btn btn-primary ml-auto"" type=""submit"">Submit form</button>
						</div>
					");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
					<script>
					// Example starter JavaScript for disabling form submissions if there are invalid fields
					(function() {
					  'use strict';
					  window.addEventListener('load', function() {
						// Fetch all the forms we want to apply custom Bootstrap validation styles to
						var forms = document.getElementsByClassName('needs-validation');
						// Loop over them and prevent submission
						var validation = Array.prototype.filter.call(forms, function(form) {
						  form.addEventListener('submit', function(event) {
							if (form.checkValidity() === false) {
							  event.preventDefault();
							  event.stopPropagation();
							}
							form.classList.add('was-validated');
						  }, false);
						});
					  }, false);
					})();
					</script>
				</div>
			</div>
		</div>
		<div id=""panel-6"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Browser <span class=""fw-300""><i>defaults</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""");
            WriteLiteral(@"panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						<p>
							Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you’ll see a slightly different style of feedback.
						</p>
						<p>
							While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.
						</p>
					</div>
				</div>
				<div class=""panel-content p-0"">		
					");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed0fa6cf07840fecc32ab9c94c706c07099f5a2a77691", async() => {
                WriteLiteral(@"
						<div class=""panel-content"">
							<div class=""form-row"">
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationDefault01"">First name</label>
									<input type=""text"" class=""form-control"" id=""validationDefault01"" placeholder=""First name"" value=""Mark"" required>
								</div>
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationDefault02"">Last name</label>
									<input type=""text"" class=""form-control"" id=""validationDefault02"" placeholder=""Last name"" value=""Otto"" required>
								</div>
								<div class=""col-md-4 mb-3"">
									<label class=""form-label"" for=""validationDefaultUsername"">Username</label>
									<div class=""input-group"">
										<div class=""input-group-prepend"">
											<span class=""input-group-text"" id=""inputGroupPrepend4"">");
                WriteLiteral(@"@</span>
										</div>
										<input type=""text"" class=""form-control"" id=""validationDefaultUsername"" placeholder=""Username"" aria-describedby=""inputGroupPrepend4"" required>
									</div>
								</div>
							</div>
							<div class=""form-row mb-2"">
								<div class=""col-md-6 mb-3"">
									<label class=""form-label"" for=""validationDefault03"">City</label>
									<input type=""text"" class=""form-control"" id=""validationDefault03"" placeholder=""City"" required>
								</div>
								<div class=""col-md-3 mb-3"">
									<label class=""form-label"" for=""validationDefault04"">State</label>
									<input type=""text"" class=""form-control"" id=""validationDefault04"" placeholder=""State"" required>
								</div>
								<div class=""col-md-3 mb-3"">
									<label class=""form-label"" for=""validationDefault05"">Zip</label>
									<input type=""text"" class=""form-control"" id=""validationDefault05"" placeholder=""Zip"" required>
								</div>
							</div>
							<div class=""form-group"">
								<div class=""custom-control c");
                WriteLiteral("ustom-checkbox\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"invalidCheck2\"");
                BeginWriteAttribute("required", " required=\"", 31778, "\"", 31789, 0);
                EndWriteAttribute();
                WriteLiteral(@">
									<label class=""custom-control-label"" for=""invalidCheck2"">Agree to terms and conditions</label>
								</div>
							</div>
						</div>	
						<div class=""panel-content border-faded border-left-0 border-right-0 border-bottom-0 d-flex flex-row"">
							<button class=""btn btn-primary ml-auto"" type=""submit"">Submit form</button>
						</div>
					");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n");
            DefineSection("ScriptsBlock", async() => {
                WriteLiteral(@"
<script type=""text/javascript"">
	// Example starter JavaScript for disabling form submissions if there are invalid fields
/*	(function() {
	  'use strict';
	  window.addEventListener('load', function() {
		// Fetch all the forms we want to apply custom Bootstrap validation styles to
		var forms = document.getElementsByClassName('needs-validation');
		// Loop over them and prevent submission
		var validation = Array.prototype.filter.call(forms, function(form) {
			form.addEventListener('submit', function(event) {
				if (form.checkValidity() === false) {
					event.preventDefault();
					event.stopPropagation();
				}
				form.classList.add('was-validated');
			}, false);
		});
	  }, false);
	})();*/
</script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SmartSettings Settings { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
