#pragma checksum "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Form_InputGroups), @"mvc.1.0.view", @"/Views/Form/InputGroups.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b43480e48fc107f7d8e5b4d5d3ee41cc161d954a", @"/Views/Form/InputGroups.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"25233f6d650b7b891024792ce25bb18ffa0a7387", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Form_InputGroups : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("selected", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
   
	ViewData["Title"] = "Input Groups";
	ViewData["PageName"] = "form_input_groups";
	ViewData["Heading"] = "<i class='subheader-icon fal fa-edit'></i>  Input Groups";
	ViewData["Category1"] = "Form Stuff";
	ViewData["PageDescription"] = "Default input elements for forms";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""row"">
	<div class=""col-xl-6"">
		<div id=""panel-1"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Basic <span class=""fw-300""><i>example</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						<p>Place one add-on or button on either side of an input. You may also place one on both sides of an input. Remember to place <code>&lt;label&gt;</code>s outside the input group.</p>
					</div>
					<div class=""form-group"">
						<label clas");
            WriteLiteral("s=\"form-label\" for=\"basic-addon1\">Prepend</label>\n\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t<span class=\"input-group-text\">");
            WriteLiteral(@"@</span>
							</div>
							<input type=""text"" id=""basic-addon1"" class=""form-control"" placeholder=""Username"" aria-label=""Username"" aria-describedby=""basic-addon1"">
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""basic-addon2"">Append</label>
						<div class=""input-group"">
							<input id=""basic-addon2"" type=""text"" class=""form-control"" placeholder=""Recipient's username"" aria-label=""Recipient's username"" aria-describedby=""basic-addon2"">
							<div class=""input-group-append"">
								<span class=""input-group-text"">");
            WriteLiteral(@"@example.com</span>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""basic-url"">Your vanity URL</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text"" id=""basic-addon3"">https://example.com/users/</span>
							</div>
							<input type=""text"" class=""form-control"" id=""basic-url"" aria-describedby=""basic-addon3"">
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""basic-url"">Prepend and append</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text"">$</span>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Amount (to the nearest dollar)"">
							<div class=""input-group-append"">
								<span class=""input-group-text"">.00</span>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""basic-url"">Text area example</label>
");
            WriteLiteral(@"						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text"">Comment</span>
							</div>
							<textarea class=""form-control"" aria-label=""With textarea""></textarea>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-2"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Wrapping <span class=""fw-300""><i>inputs</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Input gro");
            WriteLiteral(@"ups wrap by default via <code>flex-wrap: wrap</code> in order to accommodate custom form field validation within an input group. You may disable this with <code>.flex-nowrap</code>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""addon-wrapping-left"">Prepend with flex-nowrap</label>
						<div class=""input-group flex-nowrap"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text""><i");
            BeginWriteAttribute("class", " class=\"", 4584, "\"", 4634, 3);
#nullable restore
#line 98 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 4592, Settings.Theme.IconPrefix, 4592, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 4620, "fa-user", 4621, 8, true);
            WriteAttributeValue(" ", 4628, "fs-xl", 4629, 6, true);
            EndWriteAttribute();
            WriteLiteral(@"></i></span>
							</div>
							<input id=""addon-wrapping-left"" type=""text"" class=""form-control"" placeholder=""Username"" aria-label=""Username"" aria-describedby=""addon-wrapping-left"">
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""addon-wrapping-right"">Append with flex-nowrap</label>
						<div class=""input-group flex-nowrap"">
							<input id=""addon-wrapping-right"" type=""text"" class=""form-control"" placeholder=""Username"" aria-label=""Username"" aria-describedby=""addon-wrapping-right"">
							<div class=""input-group-append"">
								<span class=""input-group-text""><i");
            BeginWriteAttribute("class", " class=\"", 5249, "\"", 5299, 3);
#nullable restore
#line 108 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 5257, Settings.Theme.IconPrefix, 5257, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 5285, "fa-user", 5286, 8, true);
            WriteAttributeValue(" ", 5293, "fs-xl", 5294, 6, true);
            EndWriteAttribute();
            WriteLiteral(@"></i></span>
							</div>
						</div>
					</div>	
				</div>
			</div>
		</div>
		<div id=""panel-3"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Various <span class=""fw-300""><i>sizing</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Add the relative form sizing classes to the <code>.input-group</code> itself and contents within will automatically resize—no need for repeating the form control size classes on each element. <strong>");
            WriteLiteral(@"Sizing on the individual input group elements isn’t supported</strong>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""input-group-lg-size"">Large Input Group</label>
						<div class=""input-group input-group-lg"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text py-1 px-3"">
									<span class=""icon-stack"" style=""font-size: 2rem"">
										<i class=""base-2 icon-stack-3x color-success-500""></i>
										<i class=""base-10 text-white icon-stack-1x""></i>
										<i class=""ni md-profile color-success-700 icon-stack-2x""></i>
									</span>
								</span>
							</div>
							<input id=""input-group-lg-size"" type=""text"" class=""form-control"" placeholder=""Large size"" aria-describedby=""input-group-lg-size"">
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""input-group-lg-size-2"">Large Input Group</label>
						<div class=""input-group input-group-l");
            WriteLiteral("g\">\n\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\t0.00\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\t<i");
            BeginWriteAttribute("class", " class=\"", 7514, "\"", 7561, 2);
#nullable restore
#line 155 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 7522, Settings.Theme.IconPrefix, 7522, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 7550, "fa-percent", 7551, 11, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</span>
							</div>
							<input id=""input-group-lg-size-2"" type=""text"" class=""form-control"" placeholder=""Large size"" aria-describedby=""input-group-lg-size-2"">
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""input-group-sm-size"">Small Input Group</label>
						<div class=""input-group input-group-sm"">
							<input id=""input-group-sm-size"" type=""text"" class=""form-control"" placeholder=""Small size"" aria-describedby=""input-group-sm-size"">
							<div class=""input-group-append"">
								<span class=""input-group-text"">
									<i");
            BeginWriteAttribute("class", " class=\"", 8153, "\"", 8197, 2);
#nullable restore
#line 167 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 8161, Settings.Theme.IconPrefix, 8161, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 8189, "fa-undo", 8190, 8, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</span>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""input-group-sm-size-2"">Small Input Group</label>
						<div class=""input-group input-group-sm"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text"">
									<i");
            BeginWriteAttribute("class", " class=\"", 8514, "\"", 8558, 2);
#nullable restore
#line 177 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 8522, Settings.Theme.IconPrefix, 8522, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 8550, "fa-undo", 8551, 8, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</span>
							</div>
							<input id=""input-group-sm-size-2"" type=""text"" class=""form-control"" placeholder=""Small size"" aria-describedby=""input-group-sm-size-2"">
						</div>
					</div>
				</div>
			</div>
		</div>	
		<div id=""panel-4"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Checkboxes <span class=""fw-300""><i>and radios</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Place any checkbox or radio option within a");
            WriteLiteral(@"n input group’s addon instead of text
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""checkbox-group-2"">Checkbox</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<div class=""input-group-text"">
									<div class=""custom-control custom-checkbox"">
										<input type=""checkbox"" class=""custom-control-input"" id=""checkmeout1"">
										<label class=""custom-control-label"" for=""checkmeout1"">I agree</label>
									</div>
								</div>
								<div class=""input-group-text text-success"">
									<i");
            BeginWriteAttribute("class", " class=\"", 10155, "\"", 10206, 2);
#nullable restore
#line 213 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 10163, Settings.Theme.IconPrefix, 10163, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 10191, "fa-dollar-sign", 10192, 15, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</div>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Text input with checkbox"" id=""checkbox-group-2"">
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""checkbox-group-3"">Checkbox split</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<div class=""input-group-text text-success"">
									<i");
            BeginWriteAttribute("class", " class=\"", 10619, "\"", 10670, 2);
#nullable restore
#line 224 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 10627, Settings.Theme.IconPrefix, 10627, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 10655, "fa-dollar-sign", 10656, 15, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</div>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Text input with checkbox"" id=""checkbox-group-3"">
							<div class=""input-group-append"">
								<div class=""input-group-text"">
									<div class=""custom-control custom-checkbox"">
										<input type=""checkbox"" class=""custom-control-input"" id=""checkmeout2"">
										<label class=""custom-control-label"" for=""checkmeout2"">I agree</label>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""checkbox-group-4"">Checkbox switch</label>
						<div class=""input-group"">
							<input type=""text"" class=""form-control"" aria-label=""Text input with checkbox"" id=""checkbox-group-4"" placeholder=""Record title"">
							<div class=""input-group-append"">
								<div class=""input-group-text"">
									<div class=""custom-control d-flex custom-switch"">
										<input id=""eventlog-switch-1"" type=""checkbox"" class=""custom-control-input"">
										<label c");
            WriteLiteral(@"lass=""custom-control-label fw-500"" for=""eventlog-switch-1"">Debugger Active</label>
									</div>
								</div>
								<div class=""input-group-text"">
									<div class=""custom-control d-flex custom-switch"">
										<input id=""eventlog-switch-2"" type=""checkbox"" class=""custom-control-input"">
										<label class=""custom-control-label fw-500"" for=""eventlog-switch-2"">Record Logs</label>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""radio-group-1"">Radio generic</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<div class=""input-group-text"">
									<div class=""custom-control custom-radio"">
										<input type=""radio"" id=""customRadio1"" name=""customRadio"" class=""custom-control-input"">
										<label class=""custom-control-label"" for=""customRadio1"">Yes</label>
									</div>
								</div>
								<div class=""input-group-text"">
									<div class=""custom-control custom-radio");
            WriteLiteral(@""">
										<input type=""radio"" id=""customRadio2"" name=""customRadio"" class=""custom-control-input"">
										<label class=""custom-control-label"" for=""customRadio2"">No</label>
									</div>
								</div>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Text input with radio button"" id=""radio-group-1"">
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""radio-group-2"">Radio generic</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<div class=""input-group-text"">
									<div class=""custom-control custom-radio"">
										<input type=""radio"" id=""customRadio3"" name=""customRadio2"" class=""custom-control-input"">
										<label class=""custom-control-label"" for=""customRadio3"">Yes</label>
									</div>
								</div>
								<div class=""input-group-text text-danger"">
									<i");
            BeginWriteAttribute("class", " class=\"", 13609, "\"", 13660, 2);
#nullable restore
#line 289 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 13617, Settings.Theme.IconPrefix, 13617, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 13645, "fa-dollar-sign", 13646, 15, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</div>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Text input with radio button"" id=""radio-group-2"">
							<div class=""input-group-append"">
								<div class=""input-group-text"">
									<div class=""custom-control custom-radio"">
										<input type=""radio"" id=""customRadio4"" name=""customRadio2"" class=""custom-control-input"">
										<label class=""custom-control-label"" for=""customRadio4"">No</label>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-5"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Multiple <span class=""fw-300""><i>inputs</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<but");
            WriteLiteral(@"ton class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Add the relative form sizing classes to the <code>.input-group</code> itself and contents within will automatically resize—no need for repeating the form control size classes on each element. You can add <code>.input-group-multi-transition</code> to <code>.input-group</code> to animate focused inputs
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""name-f"">Two input fields</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text text-success"">
									<i class=""ni ni-user fs-xl""></i>
								</span>
							</div>
							<input type=""text"" aria-label=""First name"" class=""form-control"" placeholder=""First name"" id=""name-f"">
							<input type=""text"" aria-label=");
            WriteLiteral(@"""Last name"" class=""form-control"" placeholder=""Last name"" id=""name-l"">
						</div>
					</div>	
					<div class=""form-group"">
						<label class=""form-label"" for=""dollar-1"">Three input fields (animated)</label>
						<div class=""input-group input-group-multi-transition"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text"">");
            WriteLiteral(@"@</span>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Dollar amount (with dot and two decimal places)"" id=""dollar-1"" placeholder=""Recipient"">
							<input type=""text"" class=""form-control"" aria-label=""Person name"" placeholder=""Email"">
							<input type=""text"" class=""form-control"" aria-label=""Person name"" placeholder=""Amount"">
							<div class=""input-group-append"">
								<span class=""input-group-text"">0.00</span>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"">Between two inputs</label>
						<div class=""input-group"">
							<input type=""text"" class=""form-control"">
							<div class=""input-group-append input-group-prepend"">
								<span class=""input-group-text""><i");
            BeginWriteAttribute("class", " class=\"", 16819, "\"", 16873, 3);
#nullable restore
#line 353 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 16827, Settings.Theme.IconPrefix, 16827, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 16855, "fa-exchange", 16856, 12, true);
            WriteAttributeValue(" ", 16867, "fs-xl", 16868, 6, true);
            EndWriteAttribute();
            WriteLiteral(@"></i></span>
							</div>
							<input type=""text"" class=""form-control"">
						</div>
					</div>
				</div>
			</div>
		</div>
				<div id=""panel-9"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Segmented <span class=""fw-300""><i>buttons</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Dropdown with action buttons
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""drop-w-action-left"">Button from left</la");
            WriteLiteral(@"bel>	
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button type=""button"" class=""btn btn-outline-default"">Action</button>
								<button type=""button"" class=""btn btn-outline-default dropdown-toggle dropdown-toggle-split"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
								<span class=""sr-only"">Toggle Dropdown</span>
								</button>
								<div class=""dropdown-menu"">
									<a class=""dropdown-item"" href=""#"">Action</a>
									<a class=""dropdown-item"" href=""#"">Another action</a>
									<a class=""dropdown-item"" href=""#"">Something else here</a>
									<div role=""separator"" class=""dropdown-divider""></div>
									<a class=""dropdown-item"" href=""#"">Separated link</a>
								</div>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Text input with segmented dropdown button"" id=""drop-w-action-left"">
						</div>
					</div>	
					<div class=""form-group"">
						<label class=""form-label"" for=""drop-w-action-left"">Button from righ");
            WriteLiteral(@"t</label>	
						<div class=""input-group"">
							<input type=""text"" class=""form-control"" aria-label=""Text input with segmented dropdown button"" id=""drop-w-action-right"">
							<div class=""input-group-append"">
								<button type=""button"" class=""btn btn-outline-default"">Action</button>
								<button type=""button"" class=""btn btn-outline-default dropdown-toggle dropdown-toggle-split"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
								<span class=""sr-only"">Toggle Dropdown</span>
								</button>
								<div class=""dropdown-menu dropdown-menu-right"">
									<a class=""dropdown-item"" href=""#"">Action</a>
									<a class=""dropdown-item"" href=""#"">Another action</a>
									<a class=""dropdown-item"" href=""#"">Something else here</a>
									<div role=""separator"" class=""dropdown-divider""></div>
									<a class=""dropdown-item"" href=""#"">Separated link</a>
								</div>
							</div>
						</div>
					</div>	
				</div>
			</div>
		</div>
	</div>
	<div class=""col-xl-6"">
		<div id=""panel");
            WriteLiteral(@"-6"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Seamless <span class=""fw-300""><i>icon</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Add seamless icons using various utility classes 
					</div>
					<div class=""form-group"">
						<label class=""form-label"">Icon on left</label>
						<div class=""input-group bg-white shadow-inset-2"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text bg-transparent borde");
            WriteLiteral("r-right-0\">\n\t\t\t\t\t\t\t\t\t<i");
            BeginWriteAttribute("class", " class=\"", 20993, "\"", 21039, 2);
#nullable restore
#line 441 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 21001, Settings.Theme.IconPrefix, 21001, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 21029, "fa-search", 21030, 10, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</span>
							</div>
							<input type=""text"" class=""form-control border-left-0 bg-transparent pl-0"" placeholder=""Search..."">
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
					<div class=""form-group"">
						<label class=""form-label"">Icon on Right</label>
						<div class=""input-group bg-white shadow-inset-2"">
							<input type=""text"" class=""form-control border-right-0 bg-transparent pr-0"" placeholder=""Search..."">
							<div class=""input-group-append"">
								<span class=""input-group-text bg-transparent border-left-0"">
									<i");
            BeginWriteAttribute("class", " class=\"", 21640, "\"", 21686, 2);
#nullable restore
#line 454 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 21648, Settings.Theme.IconPrefix, 21648, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 21676, "fa-search", 21677, 10, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</span>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"">Large icon</label>
						<div class=""input-group input-group-lg bg-white shadow-inset-2"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text bg-transparent border-right-0 py-1 px-3"">
									<span class=""icon-stack fs-xxl"">
									<i class=""base-7 icon-stack-3x color-primary-500""></i>
									<i");
            BeginWriteAttribute("class", " class=\"", 22138, "\"", 22211, 4);
#nullable restore
#line 466 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 22146, Settings.Theme.IconPrefix, 22146, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 22174, "fa-database", 22175, 12, true);
            WriteAttributeValue(" ", 22186, "icon-stack-1x", 22187, 14, true);
            WriteAttributeValue(" ", 22200, "text-white", 22201, 11, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
									</span>
								</span>
							</div>
							<input type=""text"" class=""form-control border-left-0 bg-transparent pl-0"" placeholder=""Search..."">
						</div>
					</div>	
					<div class=""form-group"">
						<label class=""form-label"">Small icon with button</label>
						<div class=""input-group input-group-sm bg-white shadow-inset-2"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text bg-transparent border-right-0 py-1 px-3 text-success"">
									<i");
            BeginWriteAttribute("class", " class=\"", 22706, "\"", 22752, 2);
#nullable restore
#line 478 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 22714, Settings.Theme.IconPrefix, 22714, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 22742, "fa-search", 22743, 10, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
								</span>
							</div>
							<input type=""text"" class=""form-control border-left-0 bg-transparent pl-0"" placeholder=""Type here..."">
							<div class=""input-group-append"">
								<button class=""btn btn-default"" type=""button"">Search</button>
							</div>
						</div>
					</div>	
				</div>
			</div>
		</div>
		<div id=""panel-7"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Button <span class=""fw-300""><i>addon</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">	
			");
            WriteLiteral(@"		<div class=""form-group"">
						<label class=""form-label"" for=""button-addon1"">Button on left</label>								
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button class=""btn btn-outline-default"" type=""button"" id=""button-addon1"">Go</button>
							</div>
							<input type=""text"" class=""form-control"" placeholder=""Search anything..."" aria-label=""Example text with button addon"" aria-describedby=""button-addon1"">
						</div>
					</div>	
					<div class=""form-group"">
						<label class=""form-label"" for=""button-addon2"">Button on right</label>	
						<div class=""input-group"">
							<input type=""text"" class=""form-control"" placeholder=""Recipient's username"" aria-label=""Recipient's username"" aria-describedby=""button-addon2"">
							<div class=""input-group-append"">
								<button class=""btn btn-outline-default"" type=""button"" id=""button-addon2"">Look up!</button>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""button-addon3"">B");
            WriteLiteral(@"utton on both sides</label>		
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button class=""btn btn-outline-default"" type=""button"">Go</button>
							</div>
							<input id=""button-addon3"" type=""text"" class=""form-control"" placeholder=""Search for anything..."" aria-label=""Example text with two button addons"" aria-describedby=""button-addon3"">
							<div class=""input-group-append"">
								<button class=""btn btn-outline-default"" type=""button"">Go</button>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""button-addon4"">Button on left with icon</label>								
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button class=""btn btn-info"" type=""button""><i");
            BeginWriteAttribute("class", " class=\"", 25580, "\"", 25626, 2);
#nullable restore
#line 537 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 25588, Settings.Theme.IconPrefix, 25588, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 25616, "fa-search", 25617, 10, true);
            EndWriteAttribute();
            WriteLiteral(@"></i></button>
							</div>
							<input id=""button-addon4"" type=""text"" class=""form-control"" placeholder=""Search anything..."" aria-label=""Example text with button addon"" aria-describedby=""button-addon4"">
						</div>
					</div>	
					<div class=""form-group"">
						<label class=""form-label"" for=""button-addon5"">Button on right</label>	
						<div class=""input-group"">
							<input type=""text"" class=""form-control"" placeholder=""Recipient's username"" aria-label=""Recipient's username"" aria-describedby=""button-addon5"">
							<div class=""input-group-append"">
								<button class=""btn btn-primary"" type=""button"" id=""button-addon5""><i");
            BeginWriteAttribute("class", " class=\"", 26263, "\"", 26309, 2);
#nullable restore
#line 547 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 26271, Settings.Theme.IconPrefix, 26271, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 26299, "fa-search", 26300, 10, true);
            EndWriteAttribute();
            WriteLiteral(@"></i></button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-8"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Buttons <span class=""fw-300""><i>with dropdown</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Dropdowns are easily integrated just like buttons, you can have more than one dropdowns
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""dropdown-on-left"">Dropdow");
            WriteLiteral(@"n on left</label>	
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button class=""btn btn-outline-default dropdown-toggle"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown</button>
								<div class=""dropdown-menu"">
									<a class=""dropdown-item"" href=""#"">Action</a>
									<a class=""dropdown-item"" href=""#"">Another action</a>
									<a class=""dropdown-item"" href=""#"">Something else here</a>
									<div role=""separator"" class=""dropdown-divider""></div>
									<a class=""dropdown-item"" href=""#"">Separated link</a>
								</div>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Text input with dropdown button"" id=""dropdown-on-left"">
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""dropdown-on-right"">Dropdown on right</label>	
						<div class=""input-group"">
							<input type=""text"" class=""form-control""");
            WriteLiteral(@" aria-label=""Text input with dropdown button"" id=""dropdown-on-right"">
							<div class=""input-group-append"">
								<button class=""btn btn-outline-default dropdown-toggle"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown</button>
								<div class=""dropdown-menu dropdown-menu-right"">
									<a class=""dropdown-item"" href=""#"">Action</a>
									<a class=""dropdown-item"" href=""#"">Another action</a>
									<a class=""dropdown-item"" href=""#"">Something else here</a>
									<div role=""separator"" class=""dropdown-divider""></div>
									<a class=""dropdown-item"" href=""#"">Separated link</a>
								</div>
							</div>
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""dropdown-on-both"">Dropdown on both</label>	
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button class=""btn btn-outline-default dropdown-toggle"" type=""button"" data-t");
            WriteLiteral(@"oggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown</button>
								<div class=""dropdown-menu"">
									<a class=""dropdown-item"" href=""#"">Action</a>
									<a class=""dropdown-item"" href=""#"">Another action</a>
									<a class=""dropdown-item"" href=""#"">Something else here</a>
									<div role=""separator"" class=""dropdown-divider""></div>
									<a class=""dropdown-item"" href=""#"">Separated link</a>
								</div>
							</div>
							<input type=""text"" class=""form-control"" aria-label=""Text input with dropdown button"" id=""dropdown-on-both"">
							<div class=""input-group-append"">
								<button class=""btn btn-outline-default dropdown-toggle"" type=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown</button>
								<div class=""dropdown-menu dropdown-menu-right"">
									<a class=""dropdown-item"" href=""#"">Action</a>
									<a class=""dropdown-item"" href=""#"">Another action</a>
									<a class=""dropdown-item"" href=""#"">Something else here</a>
									<div rol");
            WriteLiteral(@"e=""separator"" class=""dropdown-divider""></div>
									<a class=""dropdown-item"" href=""#"">Separated link</a>
								</div>
							</div>
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-10"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Custom <span class=""fw-300""><i>forms</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Input groups include suppo");
            WriteLiteral(@"rt for custom selects and custom file inputs. Browser default versions of these are not supported
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""inputGroupSelect01"">Label & select on left</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<label class=""input-group-text"" for=""inputGroupSelect01"">Options</label>
							</div>
							<select class=""custom-select"" id=""inputGroupSelect01"">
								");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a45788", async() => {
                WriteLiteral("Choose...");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a47075", async() => {
                WriteLiteral("One");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a48246", async() => {
                WriteLiteral("Two");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a49417", async() => {
                WriteLiteral("Three");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
							</select>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""inputGroupSelect02"">Label & select on right</label>
						<div class=""form-group"">
							<div class=""input-group"">
								<select class=""custom-select"" id=""inputGroupSelect02"">
									");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a50885", async() => {
                WriteLiteral("Choose...");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a52174", async() => {
                WriteLiteral("One");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a53347", async() => {
                WriteLiteral("Two");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a54520", async() => {
                WriteLiteral("Three");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
								</select>
								<div class=""input-group-append"">
									<label class=""input-group-text"" for=""inputGroupSelect02"">Options</label>
								</div>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""inputGroupSelect03"">Button & select on left</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button class=""btn btn-outline-default"" type=""button"">Button</button>
							</div>
							<select class=""custom-select"" id=""inputGroupSelect03"" aria-label=""Example select with button addon"">
								");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a56298", async() => {
                WriteLiteral("Choose...");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a57585", async() => {
                WriteLiteral("One");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a58756", async() => {
                WriteLiteral("Two");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a59927", async() => {
                WriteLiteral("Three");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
							</select>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""inputGroupSelect04"">Button & select on right</label>
						<div class=""input-group"">
							<select class=""custom-select"" id=""inputGroupSelect04"" aria-label=""Example select with button addon"">
								");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a61408", async() => {
                WriteLiteral("Choose...");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a62695", async() => {
                WriteLiteral("One");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a63866", async() => {
                WriteLiteral("Two");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a65037", async() => {
                WriteLiteral("Three");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
							</select>
							<div class=""input-group-append"">
								<button class=""btn btn-outline-default"" type=""button"">Button</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-11"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					File  <span class=""fw-300""><i>upload</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Combine file upload with addon elements
					</div>
					<div class=""form-group");
            WriteLiteral(@""">
						<label class=""form-label"" for=""inputGroupFile01"">Button & select on right</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text"" id=""inputGroupFileAddon01"">Upload</span>
							</div>
							<div class=""custom-file"">
								<input type=""file"" class=""custom-file-input"" id=""inputGroupFile01"" aria-describedby=""inputGroupFileAddon01"">
								<label class=""custom-file-label"" for=""inputGroupFile01"">Choose file</label>
							</div>
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>	
					<div class=""form-group"">
						<label class=""form-label"" for=""inputGroupFile01"">Button & select on right</label>
						<div class=""input-group"">
							<div class=""custom-file"">
								<input type=""file"" class=""custom-file-input"" id=""inputGroupFile02"">
								<label class=""custom-file-label"" for=""inputGroupFile02"" aria-describedby=""inputGroupFileAddon02"">Choose file</label>
							</div>
							<div class=""input-gro");
            WriteLiteral(@"up-append"">
								<span class=""input-group-text"" id=""inputGroupFileAddon02"">Upload</span>
							</div>
						</div>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""inputGroupFile01"">Button & select on right</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<button class=""btn btn-outline-default"" type=""button"" id=""inputGroupFileAddon03"">Button</button>
							</div>
							<div class=""custom-file"">
								<input type=""file"" class=""custom-file-input"" id=""inputGroupFile03"" aria-describedby=""inputGroupFileAddon03"">
								<label class=""custom-file-label"" for=""inputGroupFile03"">Choose file</label>
							</div>
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""inputGroupFile01"">Button & select on right</label>
						<div class=""input-group"">
							<div class=""custom-file"">
								<input type=""file"" class=""custom-file-input"" id=""inpu");
            WriteLiteral(@"tGroupFile04"" aria-describedby=""inputGroupFileAddon04"">
								<label class=""custom-file-label"" for=""inputGroupFile04"">Choose file</label>
							</div>
							<div class=""input-group-append"">
								<button class=""btn btn-outline-default"" type=""button"" id=""inputGroupFileAddon04"">Button</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>	
		<div id=""panel-12"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Kitchen <span class=""fw-300""><i>sink</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-containe");
            WriteLiteral(@"r show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						A combination of elements working in harmony
					</div>
					<div class=""form-group"">
						<label class=""form-label"" for=""name-f"">Label Text</label>
						<div class=""input-group"">
							<div class=""input-group-prepend"">
								<span class=""input-group-text text-success"">
									<i class=""ni ni-user fs-xl""></i>
								</span>
							</div>
							<input type=""text"" aria-label=""First name"" class=""form-control"" placeholder=""User"" id=""user"">
							<div class=""input-group-append input-group-prepend"">
								<span class=""input-group-text"">
									<i");
            BeginWriteAttribute("class", " class=\"", 38462, "\"", 38516, 3);
#nullable restore
#line 807 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Form\InputGroups.cshtml"
WriteAttributeValue("", 38470, Settings.Theme.IconPrefix, 38470, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 38498, "fa-exchange", 38499, 12, true);
            WriteAttributeValue(" ", 38510, "fs-xl", 38511, 6, true);
            EndWriteAttribute();
            WriteLiteral("></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<select class=\"custom-select\" id=\"usertype\" aria-label=\"usertype\">\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a72014", async() => {
                WriteLiteral("User type");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a73073", async() => {
                WriteLiteral("One");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a74244", async() => {
                WriteLiteral("Two");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b43480e48fc107f7d8e5b4d5d3ee41cc161d954a75415", async() => {
                WriteLiteral("Three");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
							</select>
							<div class=""input-group-append"">
								<button type=""button"" class=""btn btn-success shadow-0"">Save</button>
								<button type=""button"" class=""btn btn-success shadow-0 dropdown-toggle dropdown-toggle-split"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
									<span class=""sr-only"">Toggle Dropdown</span>
								</button>
								<div class=""dropdown-menu dropdown-menu-right"">
									<a class=""dropdown-item"" href=""#"">Action</a>
									<a class=""dropdown-item"" href=""#"">Another action</a>
									<a class=""dropdown-item"" href=""#"">Something else here</a>
									<div role=""separator"" class=""dropdown-divider""></div>
									<a class=""dropdown-item"" href=""#"">Separated link</a>
								</div>
							</div>
						</div>
						<span class=""help-block"">Some help content goes here</span>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
");
            DefineSection("ScriptsBlock", async() => {
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SmartSettings Settings { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
