#pragma checksum "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Ui\ProgressBars.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "99e5bcd33047e7fa0a01a3c753ae2c0a4c71f5e2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Ui_ProgressBars), @"mvc.1.0.view", @"/Views/Ui/ProgressBars.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"99e5bcd33047e7fa0a01a3c753ae2c0a4c71f5e2", @"/Views/Ui/ProgressBars.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"25233f6d650b7b891024792ce25bb18ffa0a7387", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Ui_ProgressBars : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Ui\ProgressBars.cshtml"
   
	ViewData["Title"] = "Progress Bars";
	ViewData["PageName"] = "ui_progress_bars";
	ViewData["Heading"] = "<i class='subheader-icon fal fa-window'></i> Progress Bars";
	ViewData["Category1"] = "UI Components";
	ViewData["PageDescription"] = "Progress bars featuring support for stacked bars, animated backgrounds, and text labels";

#line default
#line hidden
#nullable disable
            DefineSection("HeadBlock", async() => {
            }
            );
            DefineSection("SubheaderBlock", async() => {
                WriteLiteral("\n<div class=\"subheader-block\">\n\t<a href=\"javascript:void(0)\" class=\"btn btn-sm btn-outline-primary\" data-action=\"toggle\" data-class=\"justify-content-end\" data-target=\".progress\">Reverse polarity</a>\n</div>\n");
            }
            );
            WriteLiteral(@"<div class=""alert alert-primary"">
	<div class=""d-flex flex-start w-100"">
		<div class=""mr-2 hidden-md-down"">
			<span class=""icon-stack icon-stack-lg"">
				<i class=""base base-6 icon-stack-3x opacity-100 color-primary-500""></i>
				<i class=""base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical""></i>
				<i");
            BeginWriteAttribute("class", " class=\"", 920, "\"", 1002, 5);
#nullable restore
#line 20 "C:\Users\Usuario\Desktop\SolucionDS\WebAppSmartDS\WebAppSmartDS\Views\Ui\ProgressBars.cshtml"
WriteAttributeValue("", 928, Settings.Theme.IconPrefix, 928, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 956, "fa-info", 957, 8, true);
            WriteAttributeValue(" ", 964, "icon-stack-1x", 965, 14, true);
            WriteAttributeValue(" ", 978, "opacity-100", 979, 12, true);
            WriteAttributeValue(" ", 990, "color-white", 991, 12, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
			</span>
		</div>
		<div class=""d-flex flex-fill"">
			<div class=""flex-fill"">
				<span class=""h5"">How it works</span>
				<br>Progress components are built with two HTML elements, some CSS to set the width, and a few attributes. We donâ€™t use <a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"" target=""_blank"">the HTML5 <code>&lt;progress&gt;</code> element</a>, ensuring you can stack progress bars, animate them, and place text labels over them.
			</div>
		</div>
	</div>	
</div>
<div class=""row"">
	<div class=""col-xl-6"">
		<div id=""panel-1"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Default <span class=""fw-300""><i>Progressbar</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></bu");
            WriteLiteral(@"tton>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						The <code>.progress</code> is a wrapper to indicate the max value of the progress bar. We use the inner <code>.progress-bar</code> to indicate the progress so far.	The <code>.progress-bar</code> requires an inline style, utility class, or custom CSS to set their width. You can add some role and aria attributes to make it accessible.
					</div>
					<div class=""progress"">
						<div class=""progress-bar"" role=""progressbar"" style=""width: 65%"" aria-valuenow=""65"" aria-valuemin=""0"" aria-valuemax=""100""></div>
					</div>
				</div>
			</div>
		</div>		
		<div id=""panel-2"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Various <span class=""fw-300""><i>height</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""");
            WriteLiteral(@"btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Control the height by adding style <code>height:""value""</code> to <code>.progress</code> element or you could use the prebuilt classes for a more uniform structure, <code>.progress-xs</code>, <code>.progress-sm</code>, <code>.progress-md</code>, <code>.progress-lg</code>, <code>.progress-xl</code>
					</div>
					<div class=""demo-v-spacing"">
						<div class=""progress progress-xs"">
							<div class=""progress-bar"" role=""progressbar"" style=""width: 75%;"" aria-valuenow=""");
            WriteLiteral(@"75"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress progress-sm"">
							<div class=""progress-bar"" role=""progressbar"" style=""width: 55%;"" aria-valuenow=""55"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress progress-md"">
							<div class=""progress-bar"" role=""progressbar"" style=""width: 35%;"" aria-valuenow=""35"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress progress-lg"">
							<div class=""progress-bar"" role=""progressbar"" style=""width: 25%;"" aria-valuenow=""25"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress progress-xl"">
							<div class=""progress-bar"" role=""progressbar"" style=""width: 15%;"" aria-valuenow=""15"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
					</div>
				</div>
			</div>
		</div>		
		<div id=""panel-3"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Label <span class=""fw-300""><i>display</i></span> 
				</h2>
				<div class=""panel");
            WriteLiteral(@"-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Add labels to your progress bars by placing text within the <code>.progress-bar</code>
					</div>
					<div class=""progress"">
						<div class=""progress-bar"" role=""progressbar"" style=""width: 25%;"" aria-valuenow=""25"" aria-valuemin=""0"" aria-valuemax=""100"">25%</div>
					</div>
				</div>
			</div>
		</div>		
		<div id=""panel-5"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Solid <span class=""fw-300""><i>backgrounds</i></span> 
		");
            WriteLiteral(@"		</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Control the background by adding avaialble <a href=""/utilities/colorpallet"" target=""_blank"">color pallets</a> to <code>.progress</code> class
					</div>
					<div class=""demo-v-spacing"">
						<div class=""progress"">
							<div class=""progress-bar bg-secondary"" role=""progressbar"" style=""width: 20%"" aria-valuenow=""20"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
						");
            WriteLiteral(@"	<div class=""progress-bar bg-primary"" role=""progressbar"" style=""width: 30%"" aria-valuenow=""30"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-success"" role=""progressbar"" style=""width: 40%"" aria-valuenow=""40"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-info"" role=""progressbar"" style=""width: 50%"" aria-valuenow=""50"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-warning"" role=""progressbar"" style=""width: 60%"" aria-valuenow=""60"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-danger"" role=""progressbar"" style=""width: 80%"" aria-valuenow=""80"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
					</div>
				</div>
			</div>
		</div>			
	</div>
	<div class=""col-xl-6"">	
		<div id=""panel-4"" class=""panel"">
			<div cl");
            WriteLiteral(@"ass=""panel-hdr"">	
				<h2>
					Multiple <span class=""fw-300""><i>bars</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Include multiple progress bars in a progress component if you need
					</div>
					<div class=""progress"">
						<div class=""progress-bar"" role=""progressbar"" style=""width: 10%"" aria-valuenow=""15"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						<div class=""progress-bar bg-success"" role=""progressbar"" style=""width: 20%"" aria-va");
            WriteLiteral(@"luenow=""20"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						<div class=""progress-bar bg-info"" role=""progressbar"" style=""width: 15%"" aria-valuenow=""5"" aria-valuemin=""0"" aria-valuemax=""100""></div>
					</div>
				</div>
			</div>
		</div>			
		<div id=""panel-6"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Gradient <span class=""fw-300""><i>backgrounds</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Control the background by adding a");
            WriteLiteral(@"vaialble <a href=""/utilities/colorpallet"" target=""_blank"">color pallets</a> to <code>.progress</code> class
					</div>
					<div class=""demo-v-spacing"">
						<div class=""progress"">
							<div class=""progress-bar bg-primary-700 bg-success-gradient"" role=""progressbar"" style=""width: 20%"" aria-valuenow=""20"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-primary-300 bg-primary-gradient"" role=""progressbar"" style=""width: 30%"" aria-valuenow=""30"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-success-700 bg-primary-gradient"" role=""progressbar"" style=""width: 40%"" aria-valuenow=""40"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-info bg-info-gradient"" role=""progressbar"" style=""width: 50%"" aria-valuenow=""50"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
			");
            WriteLiteral(@"				<div class=""progress-bar bg-danger-300 bg-warning-gradient"" role=""progressbar"" style=""width: 60%"" aria-valuenow=""60"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar bg-success-500 bg-danger-gradient"" role=""progressbar"" style=""width: 80%"" aria-valuenow=""80"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
					</div>
				</div>
			</div>
		</div>		
		<div id=""panel-7"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Striped <span class=""fw-300""><i>backrounds</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-titl");
            WriteLiteral(@"e=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Add <code>.progress-bar-striped</code> to any <code>.progress-bar</code> to apply a stripe via CSS gradient over the progress barâ€™s background color
					</div>
					<div class=""demo-v-spacing"">
						<div class=""progress"">
							<div class=""progress-bar progress-bar-striped bg-secondary"" role=""progressbar"" style=""width: 20%"" aria-valuenow=""20"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar progress-bar-striped bg-primary"" role=""progressbar"" style=""width: 30%"" aria-valuenow=""30"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar progress-bar-striped bg-success"" role=""progressbar"" style=""width: 40%"" aria-valuenow=""40"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div clas");
            WriteLiteral(@"s=""progress-bar progress-bar-striped bg-info"" role=""progressbar"" style=""width: 50%"" aria-valuenow=""50"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar progress-bar-striped bg-warning"" role=""progressbar"" style=""width: 60%"" aria-valuenow=""60"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
						<div class=""progress"">
							<div class=""progress-bar progress-bar-striped bg-danger"" role=""progressbar"" style=""width: 80%"" aria-valuenow=""80"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
					</div>
				</div>
			</div>
		</div>		
		<div id=""panel-8"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Animated <span class=""fw-300""><i>bars</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip""");
            WriteLiteral(@" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						The striped gradient can also be animated. Add <code>.progress-bar-animated</code> to <code>.progress-bar</code> to animate the stripes right to left via CSS3 animations.
					</div>
					<div class=""demo js-progress-animated"">
						<div class=""progress progress-xl"">
							<div class=""progress-bar progress-bar-striped bg-primary-500"" role=""progressbar"" style=""width: 60%"" aria-valuenow=""60"" aria-valuemin=""0"" aria-valuemax=""100""></div>
						</div>
					</div>
					<button type=""button"" class=""btn btn-secondary"" data-toggle=""button"" aria-pressed=""false"" data-action=""toggle"" data-class=""progress-bar-animated"" data-target="".js-progress-animated .progress-bar"">
						Toggle animat");
            WriteLiteral("ion\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\t\n\t</div>\n</div>\n");
            DefineSection("ScriptsBlock", async() => {
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SmartSettings Settings { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
