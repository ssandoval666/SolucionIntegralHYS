#pragma checksum "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\FormPlugins\Ionrangeslider.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "81dd89e037b57d51c4b06cbc5cb3767b2161fb4cc6836d08739c0f677a1637b0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Views_FormPlugins_Ionrangeslider), @"mvc.1.0.view", @"/Views/FormPlugins/Ionrangeslider.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Extensions

#nullable disable
    ;
#nullable restore
#line 3 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Models

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"81dd89e037b57d51c4b06cbc5cb3767b2161fb4cc6836d08739c0f677a1637b0", @"/Views/FormPlugins/Ionrangeslider.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"a8a9f40166cf41cd09b25eaff8b2a4606a231044c07c763bee09ceecf9dc9083", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Views_FormPlugins_Ionrangeslider : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("screen, print"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/formplugins/ion-rangeslider/ion-rangeslider.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/formplugins/ion-rangeslider/ion-rangeslider.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\FormPlugins\Ionrangeslider.cshtml"
   
	ViewData["Title"] = "Ion.RangeSlider";
	ViewData["PageName"] = "form_plugins_ionrangeslider";
	ViewData["Category1"] = "Form Plugins";
	ViewData["Heading"] = "<i class='subheader-icon fal fa-credit-card-front'></i> Ion.RangeSlider<sup class='badge badge-primary fw-500'>ADDON</sup>";
	ViewData["PageDescription"] = "Easy to use, flexible and responsive range slider with skin support";

#line default
#line hidden
#nullable disable

            DefineSection("HeadBlock", async() => {
                WriteLiteral("\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "81dd89e037b57d51c4b06cbc5cb3767b2161fb4cc6836d08739c0f677a1637b05731", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
            }
            );
            WriteLiteral(@"<div class=""alert alert-primary"">
	<div class=""d-flex flex-start w-100"">
		<div class=""mr-2 hidden-md-down"">
			<span class=""icon-stack icon-stack-lg"">
				<i class=""base base-6 icon-stack-3x opacity-100 color-primary-500""></i>
				<i class=""base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical""></i>
				<i class=""ni ni-blog-read icon-stack-1x opacity-100 color-white""></i>
			</span>
		</div>
		<div class=""d-flex flex-fill"">
			<div class=""flex-fill"">
				<span class=""h5"">About</span>
				<p>Easy to use, flexible and responsive range slider comes with skin support (6 skins included). Features include two types of sliders (1 or double), support for negative and fractional values. Ability to setup custom step and snap to grid option. Customizable grid values and the ability to add port & prefixes. Slider writes its value right into input value field, making it easy to use in any HTML form. You can have many sliders in one page without any conflict.</p>
				<p class=""m-0"">
					Find in-depth,");
            WriteLiteral(@" guidelines, tutorials and more on Ion.RangeSlider's <a href=""http://ionden.com/a/plugins/ion.rangeSlider/index.html"" target=""_blank"">Official Documentation</a> 
				</p>
			</div>
		</div>
	</div>
</div>
<div class=""mb-g text-center"">
	<h5>Skin Options</h5>
	<div class=""js-toggle-skin btn-group btn-group-toggle"" data-toggle=""buttons"">
		<label class=""btn btn-default active"">
			<input type=""radio"" name=""skinchange"" id=""skin-1""");
            BeginWriteAttribute("checked", " checked=\"", 1979, "\"", 1989, 0);
            EndWriteAttribute();
            WriteLiteral(@" value=""irs--flat""> 
			<span class=""hidden-sm-down"">Flat</span><span class=""hidden-sm-up"">Opt 1</span>
		</label>
		<label class=""btn btn-default"">
			<input type=""radio"" name=""skinchange"" id=""skin-2"" value=""irs--big""> 
			<span class=""hidden-sm-down"">Big</span><span class=""hidden-sm-up"">Opt 2</span>
		</label>
		<label class=""btn btn-default"">
			<input type=""radio"" name=""skinchange"" id=""skin-3"" value=""irs--modern""> 
			<span class=""hidden-sm-down"">Modern</span><span class=""hidden-sm-up"">Opt 3</span>
		</label>
		<label class=""btn btn-default"">
			<input type=""radio"" name=""skinchange"" id=""skin-4"" value=""irs--sharp""> 
			<span class=""hidden-sm-down"">Sharp</span><span class=""hidden-sm-up"">Opt 4</span>
		</label>
		<label class=""btn btn-default"">
			<input type=""radio"" name=""skinchange"" id=""skin-5"" value=""irs--round""> 
			<span class=""hidden-sm-down"">Round</span><span class=""hidden-sm-up"">Opt 5</span>
		</label>
		<label class=""btn btn-default"">
			<input type=""radio"" name=""skinchange"" id=""skin-6"" value=""irs--");
            WriteLiteral(@"square""> 
			<span class=""hidden-sm-down"">Square</span><span class=""hidden-sm-up"">Opt 6</span>
		</label>
	</div>
</div>
<div class=""row"">
	<div class=""col-xl-12"">
		<div class=""row"">
			<div class=""col-xl-6"">
				<div id=""panel-1"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Simple start <span class=""fw-300""><i>basic params</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Set type to double, specify rang");
            WriteLiteral("e, show grid and add a prefix <code>\"$\"</code>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input id=\"demo_1\" type=\"text\"");
            BeginWriteAttribute("value", " value=\"", 4136, "\"", 4144, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 4174, "\"", 4185, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
			<div class=""col-xl-6"">
				<div id=""panel-2"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Set up <span class=""fw-300""><i>range and step</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Force fractional values, using fractional step 0.1
							</div>
							<input id=""demo_2"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 5140, "\"", 5148, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 5178, "\"", 5189, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class=""row"">
			<div class=""col-xl-6"">
				<div id=""panel-3"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Using <span class=""fw-300""><i>array of custom values</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Values array could be anything, even strings
							</div>
							<input id=""demo_3"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 6174, "\"", 6182, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 6212, "\"", 6223, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
			<div class=""col-xl-6"">
				<div id=""panel-4"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Change <span class=""fw-300""><i>visual look of numbers (prettify)</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Use your own prettify function to transform numbers whatever you like
							</div>
							<input id=""demo_4"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 7216, "\"", 7224, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 7254, "\"", 7265, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class=""row"">
			<div class=""col-xl-6"">
				<div id=""panel-5"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Decorating <span class=""fw-300""><i>with prefixes, postfixes</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Using prefix and postfix at the same time, taking care of labels collision
							</div>
							<input id=""demo_5"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 8287, "\"", 8295, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 8325, "\"", 8336, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
			<div class=""col-xl-6"">
				<div id=""panel-6"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Manipulating <span class=""fw-300""><i>UI</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Disable enable any UI elements
							</div>
							<input id=""demo_6"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 9265, "\"", 9273, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 9303, "\"", 9314, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class=""row"">
			<div class=""col-xl-6"">
				<div id=""panel-7"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Customising <span class=""fw-300""><i>Grid</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Manipulate the grid using build in parameters
							</div>
							<input id=""demo_7"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 10288, "\"", 10296, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 10326, "\"", 10337, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
			<div class=""col-xl-6"">
				<div id=""panel-8"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Lock <span class=""fw-300""><i>and restrict handles</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Limit movement of a handle
							</div>
							<input id=""demo_8"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 11272, "\"", 11280, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 11310, "\"", 11321, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class=""row"">
			<div class=""col-xl-6"">
				<div id=""panel-9"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Manipulating <span class=""fw-300""><i>interval</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Restrict interval size and/or drag it
							</div>
							<input id=""demo_9"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 12292, "\"", 12300, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 12330, "\"", 12341, 0);
            EndWriteAttribute();
            WriteLiteral(@">
						</div>
					</div>
				</div>
			</div>
			<div class=""col-xl-6"">
				<div id=""panel-10"" class=""panel"">
					<div class=""panel-hdr"">	
						<h2>
							Working <span class=""fw-300""><i>with dates</i></span> 
						</h2>
						<div class=""panel-toolbar"">
							<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
							<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
							<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
						</div>
					</div>
					<div class=""panel-container show"">
						<div class=""panel-content"">									
							<div class=""panel-tag"">
								Restrict interval size and/or drag it
							</div>
							<input id=""demo_10"" type=""text""");
            BeginWriteAttribute("value", " value=\"", 13282, "\"", 13290, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"d-none\" tabindex=\"-1\"");
            BeginWriteAttribute("readonly", " readonly=\"", 13320, "\"", 13331, 0);
            EndWriteAttribute();
            WriteLiteral(">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n");
            DefineSection("ScriptsBlock", async() => {
                WriteLiteral("\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "81dd89e037b57d51c4b06cbc5cb3767b2161fb4cc6836d08739c0f677a1637b023736", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
	<script>
		$(document).ready(function () {
			$('input[type=radio][name=skinchange]').change(function() {
				$('.irs').removeClassPrefix('irs--').addClass(this.value);
			});
			var ionskin = ""flat"";
			$(""#demo_1"").ionRangeSlider({
				skin: ionskin,
				type: ""double"",
				grid: true,
				min: 0,
				max: 1000,
				from: 200,
				to: 800,
				prefix: ""$""
			});
			$(""#demo_2"").ionRangeSlider({
				skin: ionskin,
				type: ""double"",
				grid: true,
				min: -12.8,
				max: 12.8,
				from: -3.2,
				to: 3.2,
				step: 0.1
			});
			$(""#demo_3"").ionRangeSlider({
				skin: ionskin,
				grid: true,
				from: new Date().getMonth(),
				values: [
					""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"",
					""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""
				]
			});
			function my_prettify (n) {
				var num = Math.log2(n);
				return n + "" → "" + (+num.toFixed(3));
			}
			$(""#demo_4"").ionRangeSlider({
				skin: ionskin,
				grid: true,
				min: 1,
				max: 1000,
				from: 100,
				prettify: my_prettify
			});
			$(""#demo_5"").i");
                WriteLiteral(@"onRangeSlider({
				skin: ionskin,
				type: ""double"",
				grid: true,
				min: 0,
				max: 100,
				from: 47,
				to: 53,
				prefix: ""Weight: "",
				postfix: "" lbs"",
				decorate_both: true // false,
				// values_separator: "" to ""
			});
			$(""#demo_6"").ionRangeSlider({
				skin: ionskin,
				type: ""double"",
				min: -100000,
				max: 100000,
				from: -100000,
				to: 100000,
				step: 10000,
				grid: true,             // show/hide grid
				force_edges: false,     // force UI in the box
				hide_min_max: false,    // show/hide MIN and MAX labels
				hide_from_to: false,    // show/hide FROM and TO labels
				block: false            // block instance from changing
			})
			//Customising Grid
			$(""#demo_7"").ionRangeSlider({
				skin: ionskin,
				min: 0,
				max: 10000,
				from: 777,
				step: 1,            // default 1 (set step)
				grid: true,         // default false (enable grid)
				grid_num: 4,        // default 4 (set number of grid cells)
				grid_snap: false    // default false (snap grid to st");
                WriteLiteral(@"ep)
			});
			//Lock and restrict handles
			$(""#demo_8"").ionRangeSlider({
				skin: ionskin,
				type: ""single"",
				min: 0,
				max: 1000,
				from: 500,
				grid: true,
				from_min: 250,      // set min position for FROM handle (replace FROM to TO to change handle)
				from_max: 750,      // set max position for FROM handle
				from_shadow: true   // highlight restriction for FROM handle
			});
			//Manipulating interval
			$(""#demo_9"").ionRangeSlider({
				skin: ionskin,
				type: ""double"",
				min: 0,
				max: 1000,
				from: 400,
				to: 600,
				drag_interval: true,
				min_interval: 100,
				max_interval: 700
			});
			//Working with dates
			var lang = ""en-US"";
			var year = 2018;
			function dateToTS (date) {
				return date.valueOf();
			}
			function tsToDate (ts) {
				var d = new Date(ts);
				return d.toLocaleDateString(lang, {
					year: 'numeric',
					month: 'numeric',
					day: 'numeric'
				});
			}
			//Working with dates
			$(""#demo_10"").ionRangeSlider({
				skin: ionskin,
				type: ""do");
                WriteLiteral("uble\",\n\t\t\t\tgrid: true,\n\t\t\t\tmin: dateToTS(new Date(year, 10, 1)),\n\t\t\t\tmax: dateToTS(new Date(year, 11, 1)),\n\t\t\t\tfrom: dateToTS(new Date(year, 10, 8)),\n\t\t\t\tto: dateToTS(new Date(year, 10, 23)),\n\t\t\t\tprettify: tsToDate\n\t\t\t});\n\t\t});\n\t</script>\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public 
#nullable restore
#line 4 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
SmartSettings

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 4 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
Settings

#line default
#line hidden
#nullable disable
         { get; private set; }
         = default!;
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
