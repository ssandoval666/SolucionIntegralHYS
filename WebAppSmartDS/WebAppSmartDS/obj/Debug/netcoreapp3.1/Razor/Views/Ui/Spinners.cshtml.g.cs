#pragma checksum "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\Ui\Spinners.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "74f7dec21432ac539ba47f05f3c09520946b89224b3ff78867882367a57cd806"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Views_Ui_Spinners), @"mvc.1.0.view", @"/Views/Ui/Spinners.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Extensions

#nullable disable
    ;
#nullable restore
#line 3 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
using WebAppSmartDS.Models

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"74f7dec21432ac539ba47f05f3c09520946b89224b3ff78867882367a57cd806", @"/Views/Ui/Spinners.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"a8a9f40166cf41cd09b25eaff8b2a4606a231044c07c763bee09ceecf9dc9083", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Views_Ui_Spinners : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\Ui\Spinners.cshtml"
   
	ViewData["Title"] = "Spinners";
	ViewData["PageName"] = "ui_spinners";
	ViewData["Heading"] = "<i class='subheader-icon fal fa-window'></i>  Spinners";
	ViewData["Category1"] = "UI Components";
	ViewData["PageDescription"] = "Indicate the loading state of a component or page with spinners, built entirely with HTML, CSS, and no JavaScript!";

#line default
#line hidden
#nullable disable

            DefineSection("HeadBlock", async() => {
            }
            );
            WriteLiteral(@"<div class=""alert alert-primary"">
	<div class=""d-flex flex-start w-100"">
		<div class=""mr-2 hidden-md-down"">
			<span class=""icon-stack icon-stack-lg"">
				<i class=""base base-6 icon-stack-3x opacity-100 color-primary-500""></i>
				<i class=""base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical""></i>
				<i");
            BeginWriteAttribute("class", " class=\"", 700, "\"", 782, 5);
            WriteAttributeValue("", 708, 
#nullable restore
#line 15 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\Ui\Spinners.cshtml"
                Settings.Theme.IconPrefix

#line default
#line hidden
#nullable disable
            , 708, 28, false);
            WriteAttributeValue(" ", 736, "fa-info", 737, 8, true);
            WriteAttributeValue(" ", 744, "icon-stack-1x", 745, 14, true);
            WriteAttributeValue(" ", 758, "opacity-100", 759, 12, true);
            WriteAttributeValue(" ", 770, "color-white", 771, 12, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
			</span>
		</div>
		<div class=""d-flex flex-fill"">
			<div class=""flex-fill"">
				<span class=""h5"">About</span>
				<br> 
				CSS “spinners” can be used to show the loading state in your projects. They’re built only with HTML and CSS, meaning you don’t need any JavaScript to create them. You will, however, need some custom JavaScript to toggle their visibility. Their appearance, alignment, and sizing can be easily customized with our amazing utility classes.
				<br> 
				<br> 
				Learn more about this plugin on bootstrap's <a");
            BeginWriteAttribute("href", " href=\"", 1324, "\"", 1395, 3);
            WriteAttributeValue("", 1331, "https://getbootstrap.com/docs/", 1331, 30, true);
            WriteAttributeValue("", 1361, 
#nullable restore
#line 25 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\Ui\Spinners.cshtml"
                                                                                        ViewBag.Bs4v

#line default
#line hidden
#nullable disable
            , 1361, 13, false);
            WriteAttributeValue("", 1374, "/components/spinners/", 1374, 21, true);
            EndWriteAttribute();
            WriteLiteral(@" target=""_blank"">official documentation</a>.
			</div>
		</div>
	</div>
</div>
<div class=""row"">
	<div class=""col-xl-6"">
		<div id=""panel-1"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Border <span class=""fw-300""><i>spinner</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Use the border spinners for a lightweight loading indicator
					</div>
					<div class=""spinner-border"" role=""status"">
						<span class=""sr-only"">Loading...</sp");
            WriteLiteral(@"an>
					</div>
				</div>
			</div>
		</div>	
		<div id=""panel-2"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Color <span class=""fw-300""><i>spinners</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						The border spinner uses <code>currentColor</code> for its <code>border-color</code>, meaning you can customize the color with <a href=""#"" target=""_blank"">text color utilities</a>. You can use any of our text color utilities on the stand");
            WriteLiteral(@"ard spinner
					</div>
					<div class=""demo"">
						<div class=""spinner-border text-primary"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border text-secondary"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border text-success"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border text-danger"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border text-warning"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border text-info"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border text-light"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border text-dark"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>						
	");
            WriteLiteral(@"				</div>
				</div>
			</div>
		</div>	
		<div id=""panel-3"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Spinner <span class=""fw-300""><i>Alignment</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
					</div>
					<h5 class=""frame-heading"">
						Flex
					</h5>
					<div class=""frame-wrap"">
						<div class=""border p-3"">
							<div class=""d-flex justify-content-center"">
								<div class=""spinner-border"" role=""status"">
									<span ");
            WriteLiteral(@"class=""sr-only"">Loading...</span>
								</div>
							</div>
						</div>
					</div>
					<h5 class=""frame-heading"">
						Float
					</h5>
					<div class=""frame-wrap"">
						<div class=""border p-3"">
							<div class=""d-flex align-items-center"">
								<strong>Loading...</strong>
								<div class=""spinner-border ml-auto"" role=""status"" aria-hidden=""true""></div>
							</div>
						</div>
					</div>
					<h5 class=""frame-heading"">
						Text align
					</h5>
					<div class=""frame-wrap"">
						<div class=""border p-3"">
							<div class=""text-left"">
								<div class=""spinner-border"" role=""status"">
									<span class=""sr-only"">Loading...</span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>	
		<div id=""panel-4"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Spinner <span class=""fw-300""><i>sizes</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" dat");
            WriteLiteral(@"a-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Add <code>.spinner-border-sm</code> to make a smaller spinner that can quickly be used within other components. Or, use custom CSS or inline styles to change the dimensions as needed.
					</div>
					<div class=""demo-h-spacing"">
						<div class=""spinner-border"" style=""width: 3rem; height: 3rem;"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border spinner-border-sm"" role=""status"">
							<spa");
            WriteLiteral(@"n class=""sr-only"">Loading...</span>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-5"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Shape <span class=""fw-300""><i>changes</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Change the shape of your spinner using border utilities
					</div>
					<div class=""demo-h-spacing"">
						<div class=""spinner-border rounded-0 text-primary"" style=""width: 3rem; height: 3rem;""");
            WriteLiteral(@" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border rounded-0 text-danger"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-border rounded-0 text-info spinner-border-sm"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-6"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Spinner <span class=""fw-300""><i>nested</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
	");
            WriteLiteral(@"		<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.
					</div>
					<div class=""demo"">
						<button class=""btn btn-success btn-icon rounded-circle"" type=""button"" disabled>
							<span class=""spinner-border spinner-border-sm"" role=""status"" aria-hidden=""true""></span>
							<span class=""sr-only"">Loading...</span>
						</button>
						<button class=""btn btn-primary"" type=""button"" disabled>
							<span class=""spinner-border spinner-border-sm"" role=""status"" aria-hidden=""true""></span>
							<span class=""sr-only"">Loading...</span>
						</button>
						<button class=""btn btn-info"" type=""button"" disabled>
							<span class=""spinner-border spinner-border-sm"" role=""status"" aria-hidden=""true""></span>
							Loading...
						</button>
						<button class=""btn btn-danger rounded");
            WriteLiteral(@"-pill"" type=""button"" disabled>
							<span class=""spinner-border spinner-border-sm"" role=""status"" aria-hidden=""true""></span>
							Loading...
						</button>
					</div>
				</div>
			</div>
		</div>	
	</div>
	<div class=""col-xl-6"">
		<div id=""panel-7"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Growing <span class=""fw-300""><i>spinner</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						If you don’t fancy a border spinner, switch to ");
            WriteLiteral(@"the grow spinner
					</div>
					<div class=""spinner-grow"" role=""status"">
						<span class=""sr-only"">Loading...</span>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-8"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Growing <span class=""fw-300""><i>spinner colors</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Once again, this spinner is built with <code>currentColor</code>, so you can easily change its appearance with <");
            WriteLiteral(@"a href=""#"" target=""_blank"">text color utilities</a>
					</div>
					<div class=""demo"">
						<div class=""spinner-grow text-primary"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow text-secondary"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow text-success"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow text-danger"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow text-warning"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow text-info"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow text-light"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow text-dark"" role=""status"">
							<span class=""sr-only"">Loading...</sp");
            WriteLiteral(@"an>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-9"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Growing <span class=""fw-300""><i>spinner alignment</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
					</div>
					<h5 class=""frame-heading"">
						Flex
					</h5>
					<div class=""frame-wrap"">
						<div class=""border p-3"">
							<div class=""d-flex justify-content-center"">
								<div class=""spinner-grow"" role=""s");
            WriteLiteral(@"tatus"">
									<span class=""sr-only"">Loading...</span>
								</div>
							</div>
						</div>
					</div>
					<h5 class=""frame-heading"">
						Float
					</h5>
					<div class=""frame-wrap"">
						<div class=""border p-3"">
							<div class=""d-flex align-items-center"">
								<strong>Loading...</strong>
								<div class=""spinner-grow ml-auto"" role=""status"" aria-hidden=""true""></div>
							</div>
						</div>
					</div>
					<h5 class=""frame-heading"">
						Text align
					</h5>
					<div class=""frame-wrap"">
						<div class=""border p-3"">
							<div class=""text-left"">
								<div class=""spinner-grow"" role=""status"">
									<span class=""sr-only"">Loading...</span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-10"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Growing <span class=""fw-300""><i>spinner sizes</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tool");
            WriteLiteral(@"tip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Add <code>.spinner-grow-sm</code> to make a smaller spinner that can quickly be used within other components. Or, use custom CSS or inline styles to change the dimensions as needed.
					</div>
					<div class=""demo-h-spacing"">
						<div class=""spinner-grow"" style=""width: 3rem; height: 3rem;"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow spinner-grow-sm"" role=""sta");
            WriteLiteral(@"tus"">
							<span class=""sr-only"">Loading...</span>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id=""panel-11"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Shape <span class=""fw-300""><i>shifting</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Change the shape of your growing spinner using border utilities
					</div>
					<div class=""demo-h-spacing"">
						<div class=""spinner-grow rounded-0 text-primary"" style=""wi");
            WriteLiteral(@"dth: 3rem; height: 3rem;"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow rounded-0 text-danger"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
						<div class=""spinner-grow spinner-grow-sm rounded-0 text-info"" role=""status"">
							<span class=""sr-only"">Loading...</span>
						</div>
					</div>
				</div>
			</div>
		</div>	
		<div id=""panel-12"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Growing <span class=""fw-300""><i>spinner nested</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></b");
            WriteLiteral(@"utton>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.
					</div>
					<div class=""demo"">
						<button class=""btn btn-success btn-icon rounded-circle"" type=""button"" disabled>
							<span class=""spinner-grow spinner-grow-sm"" role=""status"" aria-hidden=""true""></span>
							<span class=""sr-only"">Loading...</span>
						</button>
						<button class=""btn btn-primary"" type=""button"" disabled>
							<span class=""spinner-grow spinner-grow-sm"" role=""status"" aria-hidden=""true""></span>
							<span class=""sr-only"">Loading...</span>
						</button>
						<button class=""btn btn-info"" type=""button"" disabled>
							<span class=""spinner-grow spinner-grow-sm"" role=""status"" aria-hidden=""true""></span>
							Loading...
						</button>
						<button class=""btn b");
            WriteLiteral("tn-danger rounded-pill\" type=\"button\" disabled>\n\t\t\t\t\t\t\t<span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\t\t\t\n\t</div>\n</div>\n");
            DefineSection("ScriptsBlock", async() => {
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public 
#nullable restore
#line 4 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
SmartSettings

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 4 "C:\Users\sebastian\Desktop\SolucionHYS\WebAppSmartDS\WebAppSmartDS\Views\_ViewImports.cshtml"
Settings

#line default
#line hidden
#nullable disable
         { get; private set; }
         = default!;
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
